/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DevWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "RewardTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "emergencyTokenRetrieve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_convertRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161273361011860003960008181610766015281816107a601528181610f8f01528181610fcf015261105e01526127336000f3fe6080604052600436106101b75760003560e01c80635c975abb116100ec578063a415814d1161008a578063ec85842511610064578063ec85842514610539578063f2fde38b14610559578063f7c618c114610579578063ffa21efe1461059a57600080fd5b8063a415814d1461045f578063d5a44f861461047f578063e8990524146104cb57600080fd5b806385790d88116100c657806385790d88146103d85780638aee8127146103f85780638da5cb5b1461041857806393ce53431461044a57600080fd5b80635c975abb1461038b578063715018a6146103ae5780638456cb59146103c357600080fd5b80633f4ba83a11610159578063485cc95511610133578063485cc9551461033057806349c64c0d146103505780634f1ef2861461036357806352d1902d1461037657600080fd5b80633f4ba83a146102b4578063441a3e70146102c9578063463c37a5146102e957600080fd5b806326c654821161019557806326c65482146102345780633659cfe614610254578063379607f5146102745780633b1ad44c1461029457600080fd5b8063081e3eda146101bc5780631ab06ee5146101e15780632694998414610203575b600080fd5b3480156101c857600080fd5b50610130545b6040519081526020015b60405180910390f35b3480156101ed57600080fd5b506102016101fc3660046120dc565b6105ba565b005b34801561020f57600080fd5b5061021d65ffffffffffff81565b60405165ffffffffffff90911681526020016101d8565b34801561024057600080fd5b5061020161024f366004612113565b6105f0565b34801561026057600080fd5b5061020161026f366004612113565b61075c565b34801561028057600080fd5b5061020161028f366004612137565b61083b565b3480156102a057600080fd5b5061021d6102af366004612150565b610997565b3480156102c057600080fd5b50610201610a04565b3480156102d557600080fd5b506102016102e43660046120dc565b610a16565b3480156102f557600080fd5b506101ce610304366004612150565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b34801561033c57600080fd5b5061020161034b366004612180565b610c1f565b61020161035e3660046120dc565b610de8565b6102016103713660046121c4565b610f85565b34801561038257600080fd5b506101ce611051565b34801561039757600080fd5b5060655460ff1660405190151581526020016101d8565b3480156103ba57600080fd5b50610201611104565b3480156103cf57600080fd5b50610201611116565b3480156103e457600080fd5b506101ce6103f3366004612150565b611126565b34801561040457600080fd5b50610201610413366004612113565b6111d8565b34801561042457600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101d8565b34801561045657600080fd5b506101ce61127f565b34801561046b57600080fd5b506101ce61047a366004612150565b61130b565b34801561048b57600080fd5b5061049f61049a366004612137565b611346565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101d8565b3480156104d757600080fd5b506105196104e6366004612150565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101d8565b34801561054557600080fd5b506101ce610554366004612150565b61138e565b34801561056557600080fd5b50610201610574366004612113565b611410565b34801561058557600080fd5b5061013254610432906001600160a01b031681565b3480156105a657600080fd5b506102016105b5366004612288565b611486565b6105c2611668565b8061013083815481106105d7576105d76122aa565b9060005260206000209060040201600101819055505050565b6105f8611668565b60005b6101305481101561069357610130818154811061061a5761061a6122aa565b60009182526020909120600490910201546001600160a01b039081169083160361068b5760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74207769746864726177204c5020746f6b656e730000000000000060448201526064015b60405180910390fd5b6001016105fb565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe91906122c0565b90506107146001600160a01b03841633836116c2565b604080516001600160a01b0385168152602081018390527f050d1c64cc22ce461b9bc14f6b73852566da02b03c155242bc63169d1fec42aa91015b60405180910390a1505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107a45760405162461bcd60e51b8152600401610682906122d9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107ed6000805160206126b7833981519152546001600160a01b031690565b6001600160a01b0316146108135760405162461bcd60e51b815260040161068290612325565b61081c81611725565b604080516000808252602082019092526108389183919061172d565b50565b610843611898565b610132546001600160a01b031661089c5760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e747261637400000000000000006044820152606401610682565b600081815261013160209081526040808320338085529252822091906108c390849061138e565b90506000811161090a5760405162461bcd60e51b81526020600482015260126024820152716e6f20746f6b656e7320746f20636c61696d60701b6044820152606401610682565b6000600283015561091a426118f1565b65ffffffffffff166001830155610132546001600160a01b031661093f8133846116c2565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a3505050610838600160fb55565b6000828152610131602090815260408083206001600160a01b03851684529091528120546109cb5765ffffffffffff6109fb565b6000838152610131602090815260408083206001600160a01b03861684529091529020600301546109fb906118f1565b90505b92915050565b610a0c611668565b610a14611954565b565b610a1e611898565b60008111610a6e5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e20300000000000006044820152606401610682565b610a788233610997565b65ffffffffffff164211610ace5760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b656400006044820152606401610682565b60006101308381548110610ae457610ae46122aa565b906000526020600020906004020190506000610b0084336119a6565b8054909150831115610b545760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e74006044820152606401610682565b610b5d83611a0d565b6001600160a01b0316816000016000828254610b799190612387565b909155505081546001600160a01b0316610bc057604051339084156108fc029085906000818181858888f19350505050158015610bba573d6000803e3d6000fd5b50610bd8565b81546001600160a01b0316610bd68133866116c2565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610c1b600160fb55565b5050565b600054610100900460ff1615808015610c3f5750600054600160ff909116105b80610c595750303b158015610c59575060005460ff166001145b610cbc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610682565b6000805460ff191660011790558015610cdf576000805461ff0019166101001790555b610ce7611a66565b610cef611a95565b610cf7611ac4565b61013280546001600160a01b0319166001600160a01b038416179055610d1c83611410565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610d559082612424565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610d989082612424565b50620186a061012f558015610de3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161074f565b505050565b610df0611898565b610df8611af3565b60008111610e485760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e203000000000000000006044820152606401610682565b60006101308381548110610e5e57610e5e6122aa565b60009182526020909120600490910201600381015490915061012d9060ff16610e9a5760405162461bcd60e51b815260040161068291906124e4565b5080546001600160a01b03168015610ec657610ec16001600160a01b038216333086611b39565b610eeb565b61012e348414610ee95760405162461bcd60e51b815260040161068291906124e4565b505b6000610ef785336119a6565b9050610f11848260000154610f0c9190612574565b611a0d565b6001600160a01b031681556002830154610f3490610f2f9042612574565b6118f1565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610c1b600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fcd5760405162461bcd60e51b8152600401610682906122d9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110166000805160206126b7833981519152546001600160a01b031690565b6001600160a01b03161461103c5760405162461bcd60e51b815260040161068290612325565b61104582611725565b610c1b8282600161172d565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110f15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610682565b506000805160206126b783398151915290565b61110c611668565b610a146000611b77565b61111e611668565b610a14611bc9565b6000828152610131602090815260408083206001600160a01b038516845290915281206001810154421161115e5760009150506109fe565b80600101548160030154116111775760009150506109fe565b60008160010154426111899190612387565b9050816003015442116111ac5760018201546111a59042612387565b90506111c3565b816001015482600301546111c09190612387565b90505b81546111cf9082612587565b95945050505050565b6111e0611898565b6111e8611668565b610132546001600160a01b031660006111ff61127f565b9050801561121b5761121b6001600160a01b03831633836116c2565b61013280546001600160a01b0319166001600160a01b0385811691821790925560405183815290918416907fc133375757269458a329c73a344c8ef483535870f46ed4cd332f857a5ef525d09060200160405180910390a35050610838600160fb55565b610132546000906001600160a01b03166112995750600090565b610132546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130691906122c0565b905090565b6000828152610131602090815260408083206001600160a01b038516845290915281206002015461133c8484611126565b6109fb9190612574565b610130818154811061135757600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b60008061013084815481106113a5576113a56122aa565b600091825260209091206101325460049092020191506001600160a01b031615806113d257506001810154155b156113e15760009150506109fe565b806001015461012f546113f4868661130b565b6113fe9190612587565b611408919061259e565b9150506109fe565b611418611668565b6001600160a01b03811661147d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610682565b61083881611b77565b61148e611668565b6000600a818460028111156114a5576114a56125c0565b036114b4576101a49150611542565b60018460028111156114c8576114c86125c0565b036114d757610e109150611542565b60028460028111156114eb576114eb6125c0565b036114fa57611c209150611542565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f646044820152606401610682565b60006040518060800160405280856001600160a01b031681526020018366035c746a544000611571919061259e565b8152602080820195909552600160409182018190526101308054918201815560005282517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b0319166001600160a01b03909216919091179055948201517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf358601558101517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36850155606001517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909301805460ff19169315159390931790925550505050565b6033546001600160a01b03163314610a145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610682565b6040516001600160a01b038316602482015260448101829052610de390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c06565b610838611668565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561176057610de383611cdb565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117ba575060408051601f3d908101601f191682019092526117b7918101906122c0565b60015b61181d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610682565b6000805160206126b7833981519152811461188c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610682565b50610de3838383611d77565b600260fb54036118ea5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610682565b600260fb55565b600065ffffffffffff8211156119495760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e2034382062697473000000006044820152606401610682565b5090565b600160fb55565b61195c611d9c565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000828152610131602090815260408083206001600160a01b03851684529091528120906119d48484611126565b9050808260020160008282546119ea9190612574565b909155506119f99050426118f1565b65ffffffffffff1660018301555092915050565b60006001600160a01b038211156119495760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e2031363020626974730000006044820152606401610682565b600054610100900460ff16611a8d5760405162461bcd60e51b8152600401610682906125d6565b610a14611de5565b600054610100900460ff16611abc5760405162461bcd60e51b8152600401610682906125d6565b610a14611e15565b600054610100900460ff16611aeb5760405162461bcd60e51b8152600401610682906125d6565b610a14611e48565b60655460ff1615610a145760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610682565b6040516001600160a01b0380851660248301528316604482015260648101829052611b719085906323b872dd60e01b906084016116ee565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611bd1611af3565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119893390565b6000611c5b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e6f9092919063ffffffff16565b9050805160001480611c7c575080806020019051810190611c7c9190612621565b610de35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610682565b6001600160a01b0381163b611d485760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610682565b6000805160206126b783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611d8083611e86565b600082511180611d8d5750805b15610de357611b718383611ec6565b60655460ff16610a145760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610682565b600054610100900460ff16611e0c5760405162461bcd60e51b8152600401610682906125d6565b610a1433611b77565b600054610100900460ff16611e3c5760405162461bcd60e51b8152600401610682906125d6565b6065805460ff19169055565b600054610100900460ff1661194d5760405162461bcd60e51b8152600401610682906125d6565b6060611e7e8484600085611eeb565b949350505050565b611e8f81611cdb565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606109fb83836040518060600160405280602781526020016126d760279139611fc6565b606082471015611f4c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610682565b600080866001600160a01b03168587604051611f689190612667565b60006040518083038185875af1925050503d8060008114611fa5576040519150601f19603f3d011682016040523d82523d6000602084013e611faa565b606091505b5091509150611fbb8783838761203e565b979650505050505050565b6060600080856001600160a01b031685604051611fe39190612667565b600060405180830381855af49150503d806000811461201e576040519150601f19603f3d011682016040523d82523d6000602084013e612023565b606091505b50915091506120348683838761203e565b9695505050505050565b606083156120ad5782516000036120a6576001600160a01b0385163b6120a65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610682565b5081611e7e565b611e7e83838151156120c25781518083602001fd5b8060405162461bcd60e51b81526004016106829190612683565b600080604083850312156120ef57600080fd5b50508035926020909101359150565b6001600160a01b038116811461083857600080fd5b60006020828403121561212557600080fd5b8135612130816120fe565b9392505050565b60006020828403121561214957600080fd5b5035919050565b6000806040838503121561216357600080fd5b823591506020830135612175816120fe565b809150509250929050565b6000806040838503121561219357600080fd5b823561219e816120fe565b91506020830135612175816120fe565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156121d757600080fd5b82356121e2816120fe565b9150602083013567ffffffffffffffff808211156121ff57600080fd5b818501915085601f83011261221357600080fd5b813581811115612225576122256121ae565b604051601f8201601f19908116603f0116810190838211818310171561224d5761224d6121ae565b8160405282815288602084870101111561226657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561229b57600080fd5b82356003811061219e57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156122d257600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156109fe576109fe612371565b600181811c908216806123ae57607f821691505b6020821081036123ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610de3576000816000526020600020601f850160051c810160208610156123fd5750805b601f850160051c820191505b8181101561241c57828155600101612409565b505050505050565b815167ffffffffffffffff81111561243e5761243e6121ae565b6124528161244c845461239a565b846123d4565b602080601f831160018114612487576000841561246f5750858301515b600019600386901b1c1916600185901b17855561241c565b600085815260208120601f198616915b828110156124b657888601518255948401946001909101908401612497565b50858210156124d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352600084546124f88161239a565b806020870152604060018084166000811461251a576001811461253657612566565b60ff19851660408a0152604084151560051b8a01019550612566565b89600052602060002060005b8581101561255d5781548b8201860152908301908801612542565b8a016040019650505b509398975050505050505050565b808201808211156109fe576109fe612371565b80820281158282048414176109fe576109fe612371565b6000826125bb57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561263357600080fd5b8151801515811461213057600080fd5b60005b8381101561265e578181015183820152602001612646565b50506000910152565b60008251612679818460208701612643565b9190910192915050565b60208152600082518060208401526126a2816040850160208701612643565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122005ed8994c2ac572f051fd2d10d4d282f7a35171696d625e2ab1a4e02957c458064736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
