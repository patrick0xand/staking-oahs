/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516123f2610118600039600081816105540152818161059d01528181610d8901528181610dc90152610e5801526123f26000f3fe6080604052600436106101665760003560e01c806352d1902d116100d1578063a415814d1161008a578063ec85842511610064578063ec85842514610493578063f2fde38b146104b3578063f7c618c1146104d3578063ffa21efe146104f457600080fd5b8063a415814d146103b9578063d5a44f86146103d9578063e89905241461042557600080fd5b806352d1902d146103055780635c975abb1461031a578063715018a61461033d5780638456cb591461035257806385790d88146103675780638da5cb5b1461038757600080fd5b80633f4ba83a116101235780633f4ba83a14610243578063441a3e7014610258578063463c37a514610278578063485cc955146102bf57806349c64c0d146102df5780634f1ef286146102f257600080fd5b8063081e3eda1461016b5780631ab06ee51461019057806326949984146101b25780633659cfe6146101e3578063379607f5146102035780633b1ad44c14610223575b600080fd5b34801561017757600080fd5b50610130545b6040519081526020015b60405180910390f35b34801561019c57600080fd5b506101b06101ab366004611d9b565b610514565b005b3480156101be57600080fd5b506101cc65ffffffffffff81565b60405165ffffffffffff9091168152602001610187565b3480156101ef57600080fd5b506101b06101fe366004611dd2565b61054a565b34801561020f57600080fd5b506101b061021e366004611df6565b610632565b34801561022f57600080fd5b506101cc61023e366004611e0f565b61078e565b34801561024f57600080fd5b506101b06107fb565b34801561026457600080fd5b506101b0610273366004611d9b565b61080d565b34801561028457600080fd5b5061017d610293366004611e0f565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b3480156102cb57600080fd5b506101b06102da366004611e3f565b610a16565b6101b06102ed366004611d9b565b610be2565b6101b0610300366004611e83565b610d7f565b34801561031157600080fd5b5061017d610e4b565b34801561032657600080fd5b5060655460ff166040519015158152602001610187565b34801561034957600080fd5b506101b0610efe565b34801561035e57600080fd5b506101b0610f10565b34801561037357600080fd5b5061017d610382366004611e0f565b610f20565b34801561039357600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610187565b3480156103c557600080fd5b5061017d6103d4366004611e0f565b610fd2565b3480156103e557600080fd5b506103f96103f4366004611df6565b61100d565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610187565b34801561043157600080fd5b50610473610440366004611e0f565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610187565b34801561049f57600080fd5b5061017d6104ae366004611e0f565b611055565b3480156104bf57600080fd5b506101b06104ce366004611dd2565b6110d7565b3480156104df57600080fd5b50610132546103a1906001600160a01b031681565b34801561050057600080fd5b506101b061050f366004611f47565b61114d565b61051c611327565b80610130838154811061053157610531611f69565b9060005260206000209060040201600101819055505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361059b5760405162461bcd60e51b815260040161059290611f7f565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105e4600080516020612376833981519152546001600160a01b031690565b6001600160a01b03161461060a5760405162461bcd60e51b815260040161059290611fcb565b61061381611381565b6040805160008082526020820190925261062f91839190611389565b50565b61063a6114f4565b610132546001600160a01b03166106935760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e747261637400000000000000006044820152606401610592565b600081815261013160209081526040808320338085529252822091906106ba908490611055565b9050600081116107015760405162461bcd60e51b81526020600482015260126024820152716e6f20746f6b656e7320746f20636c61696d60701b6044820152606401610592565b600060028301556107114261154d565b65ffffffffffff166001830155610132546001600160a01b03166107368133846115a9565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a350505061062f600160fb55565b6000828152610131602090815260408083206001600160a01b03851684529091528120546107c25765ffffffffffff6107f2565b6000838152610131602090815260408083206001600160a01b03861684529091529020600301546107f29061154d565b90505b92915050565b610803611327565b61080b611613565b565b6108156114f4565b600081116108655760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e20300000000000006044820152606401610592565b61086f823361078e565b65ffffffffffff1642116108c55760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b656400006044820152606401610592565b600061013083815481106108db576108db611f69565b9060005260206000209060040201905060006108f78433611665565b805490915083111561094b5760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e74006044820152606401610592565b610954836116cc565b6001600160a01b0316816000016000828254610970919061202d565b909155505081546001600160a01b03166109b757604051339084156108fc029085906000818181858888f193505050501580156109b1573d6000803e3d6000fd5b506109cf565b81546001600160a01b03166109cd8133866115a9565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610a12600160fb55565b5050565b600054610100900460ff1615808015610a365750600054600160ff909116105b80610a505750303b158015610a50575060005460ff166001145b610ab35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610592565b6000805460ff191660011790558015610ad6576000805461ff0019166101001790555b610ade611725565b610ae6611754565b610aee611783565b61013280546001600160a01b0319166001600160a01b038416179055610b13836110d7565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610b4c90826120ca565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610b8f90826120ca565b506103e861012f558015610bdd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610bea6114f4565b610bf26117b2565b60008111610c425760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e203000000000000000006044820152606401610592565b60006101308381548110610c5857610c58611f69565b60009182526020909120600490910201600381015490915061012d9060ff16610c945760405162461bcd60e51b8152600401610592919061218a565b5080546001600160a01b03168015610cc057610cbb6001600160a01b0382163330866117f8565b610ce5565b61012e348414610ce35760405162461bcd60e51b8152600401610592919061218a565b505b6000610cf18533611665565b9050610d0b848260000154610d06919061221a565b6116cc565b6001600160a01b031681556002830154610d2e90610d29904261221a565b61154d565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610a12600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610dc75760405162461bcd60e51b815260040161059290611f7f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e10600080516020612376833981519152546001600160a01b031690565b6001600160a01b031614610e365760405162461bcd60e51b815260040161059290611fcb565b610e3f82611381565b610a1282826001611389565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eeb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610592565b5060008051602061237683398151915290565b610f06611327565b61080b6000611836565b610f18611327565b61080b611888565b6000828152610131602090815260408083206001600160a01b0385168452909152812060018101544211610f585760009150506107f5565b8060010154816003015411610f715760009150506107f5565b6000816001015442610f83919061202d565b905081600301544211610fa6576001820154610f9f904261202d565b9050610fbd565b81600101548260030154610fba919061202d565b90505b8154610fc9908261222d565b95945050505050565b6000828152610131602090815260408083206001600160a01b03851684529091528120600201546110038484610f20565b6107f2919061221a565b610130818154811061101e57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b600080610130848154811061106c5761106c611f69565b600091825260209091206101325460049092020191506001600160a01b0316158061109957506001810154155b156110a85760009150506107f5565b806001015461012f546110bb8686610fd2565b6110c5919061222d565b6110cf9190612244565b9150506107f5565b6110df611327565b6001600160a01b0381166111445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610592565b61062f81611836565b611155611327565b60008083600281111561116a5761116a612266565b03611179575062093a80611207565b600183600281111561118d5761118d612266565b0361119c5750624f1a00611207565b60028360028111156111b0576111b0612266565b036111bf5750629e3400611207565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f646044820152606401610592565b60006040518060800160405280846001600160a01b0316815260200183617530611231919061222d565b8152602080820194909452600160409182018190526101308054918201815560005282517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b0319166001600160a01b03909216919091179055938201517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf358501558101517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36840155606001517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909201805460ff191692151592909217909155505050565b6033546001600160a01b0316331461080b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610592565b61062f611327565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156113bc57610bdd836118c5565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611416575060408051601f3d908101601f191682019092526114139181019061227c565b60015b6114795760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610592565b60008051602061237683398151915281146114e85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610592565b50610bdd838383611961565b600260fb54036115465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610592565b600260fb55565b600065ffffffffffff8211156115a55760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e2034382062697473000000006044820152606401610592565b5090565b6040516001600160a01b038316602482015260448101829052610bdd90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611986565b600160fb55565b61161b611a5b565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000828152610131602090815260408083206001600160a01b03851684529091528120906116938484610f20565b9050808260020160008282546116a9919061221a565b909155506116b890504261154d565b65ffffffffffff1660018301555092915050565b60006001600160a01b038211156115a55760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e2031363020626974730000006044820152606401610592565b600054610100900460ff1661174c5760405162461bcd60e51b815260040161059290612295565b61080b611aa4565b600054610100900460ff1661177b5760405162461bcd60e51b815260040161059290612295565b61080b611ad4565b600054610100900460ff166117aa5760405162461bcd60e51b815260040161059290612295565b61080b611b07565b60655460ff161561080b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610592565b6040516001600160a01b03808516602483015283166044820152606481018290526118309085906323b872dd60e01b906084016115d5565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6118906117b2565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116483390565b6001600160a01b0381163b6119325760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610592565b60008051602061237683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61196a83611b2e565b6000825111806119775750805b15610bdd576118308383611b6e565b60006119db826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b939092919063ffffffff16565b90508051600014806119fc5750808060200190518101906119fc91906122e0565b610bdd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610592565b60655460ff1661080b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610592565b600054610100900460ff16611acb5760405162461bcd60e51b815260040161059290612295565b61080b33611836565b600054610100900460ff16611afb5760405162461bcd60e51b815260040161059290612295565b6065805460ff19169055565b600054610100900460ff1661160c5760405162461bcd60e51b815260040161059290612295565b611b37816118c5565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606107f2838360405180606001604052806027815260200161239660279139611baa565b6060611ba28484600085611c22565b949350505050565b6060600080856001600160a01b031685604051611bc79190612326565b600060405180830381855af49150503d8060008114611c02576040519150601f19603f3d011682016040523d82523d6000602084013e611c07565b606091505b5091509150611c1886838387611cfd565b9695505050505050565b606082471015611c835760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610592565b600080866001600160a01b03168587604051611c9f9190612326565b60006040518083038185875af1925050503d8060008114611cdc576040519150601f19603f3d011682016040523d82523d6000602084013e611ce1565b606091505b5091509150611cf287838387611cfd565b979650505050505050565b60608315611d6c578251600003611d65576001600160a01b0385163b611d655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610592565b5081611ba2565b611ba28383815115611d815781518083602001fd5b8060405162461bcd60e51b81526004016105929190612342565b60008060408385031215611dae57600080fd5b50508035926020909101359150565b6001600160a01b038116811461062f57600080fd5b600060208284031215611de457600080fd5b8135611def81611dbd565b9392505050565b600060208284031215611e0857600080fd5b5035919050565b60008060408385031215611e2257600080fd5b823591506020830135611e3481611dbd565b809150509250929050565b60008060408385031215611e5257600080fd5b8235611e5d81611dbd565b91506020830135611e3481611dbd565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611e9657600080fd5b8235611ea181611dbd565b9150602083013567ffffffffffffffff80821115611ebe57600080fd5b818501915085601f830112611ed257600080fd5b813581811115611ee457611ee4611e6d565b604051601f8201601f19908116603f01168101908382118183101715611f0c57611f0c611e6d565b81604052828152886020848701011115611f2557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060408385031215611f5a57600080fd5b823560038110611e5d57600080fd5b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156107f5576107f5612017565b600181811c9082168061205457607f821691505b60208210810361207457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bdd576000816000526020600020601f850160051c810160208610156120a35750805b601f850160051c820191505b818110156120c2578281556001016120af565b505050505050565b815167ffffffffffffffff8111156120e4576120e4611e6d565b6120f8816120f28454612040565b8461207a565b602080601f83116001811461212d57600084156121155750858301515b600019600386901b1c1916600185901b1785556120c2565b600085815260208120601f198616915b8281101561215c5788860151825594840194600190910190840161213d565b508582101561217a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083526000845461219e81612040565b80602087015260406001808416600081146121c057600181146121dc5761220c565b60ff19851660408a0152604084151560051b8a0101955061220c565b89600052602060002060005b858110156122035781548b82018601529083019088016121e8565b8a016040019650505b509398975050505050505050565b808201808211156107f5576107f5612017565b80820281158282048414176107f5576107f5612017565b60008261226157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561228e57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156122f257600080fd5b81518015158114611def57600080fd5b60005b8381101561231d578181015183820152602001612305565b50506000910152565b60008251612338818460208701612302565b9190910192915050565b6020815260008251806020840152612361816040850160208701612302565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209aa624fe671e25243628d4e71c5215f20975b32cb4be56299292c228c6be4cfe64736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
