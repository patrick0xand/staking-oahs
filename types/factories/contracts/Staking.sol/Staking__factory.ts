/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DevWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "RewardTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "drainToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "emergencyTokenRetrieve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_convertRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_convertRates",
        type: "uint256[]",
      },
    ],
    name: "sets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516129a6610118600039600081816107b1015281816107f101528181610fd001528181611010015261109f01526129a66000f3fe6080604052600436106101cd5760003560e01c8063715018a6116100f7578063b79f54f011610095578063ec85842511610064578063ec85842514610584578063f2fde38b146105a4578063f7c618c1146105c4578063ffa21efe146105e557600080fd5b8063b79f54f01461048a578063bfa2c1d2146104aa578063d5a44f86146104ca578063e89905241461051657600080fd5b80638aee8127116100d15780638aee8127146104035780638da5cb5b1461042357806393ce534314610455578063a415814d1461046a57600080fd5b8063715018a6146103b95780638456cb59146103ce57806385790d88146103e357600080fd5b8063441a3e701161016f5780634e71d92d1161013e5780634e71d92d146103595780634f1ef2861461036e57806352d1902d146103815780635c975abb1461039657600080fd5b8063441a3e70146102bf578063463c37a5146102df578063485cc9551461032657806349c64c0d1461034657600080fd5b806326c65482116101ab57806326c654821461024a5780633659cfe61461026a5780633b1ad44c1461028a5780633f4ba83a146102aa57600080fd5b8063081e3eda146101d25780631ab06ee5146101f75780632694998414610219575b600080fd5b3480156101de57600080fd5b50610130545b6040519081526020015b60405180910390f35b34801561020357600080fd5b50610217610212366004612256565b610605565b005b34801561022557600080fd5b5061023365ffffffffffff81565b60405165ffffffffffff90911681526020016101ee565b34801561025657600080fd5b5061021761026536600461228d565b61063b565b34801561027657600080fd5b5061021761028536600461228d565b6107a7565b34801561029657600080fd5b506102336102a53660046122b1565b610886565b3480156102b657600080fd5b506102176108f3565b3480156102cb57600080fd5b506102176102da366004612256565b610905565b3480156102eb57600080fd5b506101e46102fa3660046122b1565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b34801561033257600080fd5b506102176103413660046122e1565b610b0e565b610217610354366004612256565b610cd7565b34801561036557600080fd5b50610217610e74565b61021761037c366004612325565b610fc6565b34801561038d57600080fd5b506101e4611092565b3480156103a257600080fd5b5060655460ff1660405190151581526020016101ee565b3480156103c557600080fd5b50610217611145565b3480156103da57600080fd5b50610217611157565b3480156103ef57600080fd5b506101e46103fe3660046122b1565b611167565b34801561040f57600080fd5b5061021761041e36600461228d565b611219565b34801561042f57600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101ee565b34801561046157600080fd5b506101e46112c0565b34801561047657600080fd5b506101e46104853660046122b1565b61134c565b34801561049657600080fd5b506102176104a5366004612435565b611387565b3480156104b657600080fd5b506102176104c53660046124a1565b611455565b3480156104d657600080fd5b506104ea6104e53660046124e2565b6114bb565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101ee565b34801561052257600080fd5b506105646105313660046122b1565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101ee565b34801561059057600080fd5b506101e461059f3660046122b1565b611503565b3480156105b057600080fd5b506102176105bf36600461228d565b611585565b3480156105d057600080fd5b506101325461043d906001600160a01b031681565b3480156105f157600080fd5b506102176106003660046124fb565b6115fb565b61060d6117e8565b8061013083815481106106225761062261251d565b9060005260206000209060040201600101819055505050565b6106436117e8565b60005b610130548110156106de5761013081815481106106655761066561251d565b60009182526020909120600490910201546001600160a01b03908116908316036106d65760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74207769746864726177204c5020746f6b656e730000000000000060448201526064015b60405180910390fd5b600101610646565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190612533565b905061075f6001600160a01b0384163383611842565b604080516001600160a01b0385168152602081018390527f050d1c64cc22ce461b9bc14f6b73852566da02b03c155242bc63169d1fec42aa91015b60405180910390a1505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107ef5760405162461bcd60e51b81526004016106cd9061254c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661083860008051602061292a833981519152546001600160a01b031690565b6001600160a01b03161461085e5760405162461bcd60e51b81526004016106cd90612598565b610867816118a5565b60408051600080825260208201909252610883918391906118ad565b50565b6000828152610131602090815260408083206001600160a01b03851684529091528120546108ba5765ffffffffffff6108ea565b6000838152610131602090815260408083206001600160a01b03861684529091529020600301546108ea90611a18565b90505b92915050565b6108fb6117e8565b610903611a74565b565b61090d611ac6565b6000811161095d5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e203000000000000060448201526064016106cd565b6109678233610886565b65ffffffffffff1642116109bd5760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b6564000060448201526064016106cd565b600061013083815481106109d3576109d361251d565b9060005260206000209060040201905060006109ef8433611b1f565b8054909150831115610a435760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e740060448201526064016106cd565b610a4c83611b86565b6001600160a01b0316816000016000828254610a6891906125fa565b909155505081546001600160a01b0316610aaf57604051339084156108fc029085906000818181858888f19350505050158015610aa9573d6000803e3d6000fd5b50610ac7565b81546001600160a01b0316610ac5813386611842565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610b0a600160fb55565b5050565b600054610100900460ff1615808015610b2e5750600054600160ff909116105b80610b485750303b158015610b48575060005460ff166001145b610bab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106cd565b6000805460ff191660011790558015610bce576000805461ff0019166101001790555b610bd6611be6565b610bde611c15565b610be6611c44565b61013280546001600160a01b0319166001600160a01b038416179055610c0b83611585565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610c449082612697565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610c879082612697565b50620186a061012f558015610cd2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161079a565b505050565b610cdf611ac6565b610ce7611c73565b60008111610d375760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e2030000000000000000060448201526064016106cd565b60006101308381548110610d4d57610d4d61251d565b60009182526020909120600490910201600381015490915061012d9060ff16610d895760405162461bcd60e51b81526004016106cd9190612757565b5080546001600160a01b03168015610db557610db06001600160a01b038216333086611cb9565b610dda565b61012e348414610dd85760405162461bcd60e51b81526004016106cd9190612757565b505b6000610de68533611b1f565b9050610e00848260000154610dfb91906127e7565b611b86565b6001600160a01b031681556002830154610e2390610e1e90426127e7565b611a18565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610b0a600160fb55565b610e7c611ac6565b610132546001600160a01b0316610ed55760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e7472616374000000000000000060448201526064016106cd565b60005b61013054811015610fbb5760008181526101316020908152604080832033845290915281206001810154839203610f10575050610fb3565b6000610f1c8333611503565b905080600003610f2e57505050610fb3565b60006002830155610f3e42611a18565b65ffffffffffff166001830155610132546001600160a01b0316610f63813384611842565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a3505050505b600101610ed8565b50610903600160fb55565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361100e5760405162461bcd60e51b81526004016106cd9061254c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661105760008051602061292a833981519152546001600160a01b031690565b6001600160a01b03161461107d5760405162461bcd60e51b81526004016106cd90612598565b611086826118a5565b610b0a828260016118ad565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111325760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106cd565b5060008051602061292a83398151915290565b61114d6117e8565b6109036000611cf1565b61115f6117e8565b610903611d43565b6000828152610131602090815260408083206001600160a01b038516845290915281206001810154421161119f5760009150506108ed565b80600101548160030154116111b85760009150506108ed565b60008160010154426111ca91906125fa565b9050816003015442116111ed5760018201546111e690426125fa565b9050611204565b8160010154826003015461120191906125fa565b90505b815461121090826127fa565b95945050505050565b611221611ac6565b6112296117e8565b610132546001600160a01b031660006112406112c0565b9050801561125c5761125c6001600160a01b0383163383611842565b61013280546001600160a01b0319166001600160a01b0385811691821790925560405183815290918416907fc133375757269458a329c73a344c8ef483535870f46ed4cd332f857a5ef525d09060200160405180910390a35050610883600160fb55565b610132546000906001600160a01b03166112da5750600090565b610132546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113479190612533565b905090565b6000828152610131602090815260408083206001600160a01b038516845290915281206002015461137d8484611167565b6108ea91906127e7565b61138f6117e8565b8281146113d05760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b60448201526064016106cd565b60005b8381101561144e5760008585838181106113ef576113ef61251d565b905060200201359050600084848481811061140c5761140c61251d565b90506020020135905080610130838154811061142a5761142a61251d565b906000526020600020906004020160010181905550505080806001019150506113d3565b5050505050565b61145d6117e8565b6001600160a01b0382166114a7576040516001600160a01b0384169082156108fc029083906000818181858888f193505050501580156114a1573d6000803e3d6000fd5b50505050565b610cd26001600160a01b0383168483611842565b61013081815481106114cc57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b600080610130848154811061151a5761151a61251d565b600091825260209091206101325460049092020191506001600160a01b0316158061154757506001810154155b156115565760009150506108ed565b806001015461012f54611569868661134c565b61157391906127fa565b61157d9190612811565b9150506108ed565b61158d6117e8565b6001600160a01b0381166115f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106cd565b61088381611cf1565b6116036117e8565b6000808084600281111561161957611619612833565b0361162c575062093a809050600a6116c2565b600184600281111561164057611640612833565b036116535750624f1a009050600f6116c2565b600284600281111561166757611667612833565b0361167a5750629e3400905060146116c2565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f6460448201526064016106cd565b60006040518060800160405280856001600160a01b031681526020018366035c746a5440006116f19190612811565b8152602080820195909552600160409182018190526101308054918201815560005282517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b0319166001600160a01b03909216919091179055948201517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf358601558101517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36850155606001517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909301805460ff19169315159390931790925550505050565b6033546001600160a01b031633146109035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cd565b6040516001600160a01b038316602482015260448101829052610cd290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d80565b6108836117e8565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156118e057610cd283611e55565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561193a575060408051601f3d908101601f1916820190925261193791810190612533565b60015b61199d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106cd565b60008051602061292a8339815191528114611a0c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106cd565b50610cd2838383611ef1565b600065ffffffffffff821115611a705760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e20343820626974730000000060448201526064016106cd565b5090565b611a7c611f16565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260fb5403611b185760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106cd565b600260fb55565b6000828152610131602090815260408083206001600160a01b0385168452909152812090611b4d8484611167565b905080826002016000828254611b6391906127e7565b90915550611b72905042611a18565b65ffffffffffff1660018301555092915050565b60006001600160a01b03821115611a705760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e20313630206269747300000060448201526064016106cd565b600160fb55565b600054610100900460ff16611c0d5760405162461bcd60e51b81526004016106cd90612849565b610903611f5f565b600054610100900460ff16611c3c5760405162461bcd60e51b81526004016106cd90612849565b610903611f8f565b600054610100900460ff16611c6b5760405162461bcd60e51b81526004016106cd90612849565b610903611fc2565b60655460ff16156109035760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106cd565b6040516001600160a01b03808516602483015283166044820152606481018290526114a19085906323b872dd60e01b9060840161186e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611d4b611c73565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611aa93390565b6000611dd5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611fe99092919063ffffffff16565b9050805160001480611df6575080806020019051810190611df69190612894565b610cd25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106cd565b6001600160a01b0381163b611ec25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106cd565b60008051602061292a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611efa83612000565b600082511180611f075750805b15610cd2576114a18383612040565b60655460ff166109035760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106cd565b600054610100900460ff16611f865760405162461bcd60e51b81526004016106cd90612849565b61090333611cf1565b600054610100900460ff16611fb65760405162461bcd60e51b81526004016106cd90612849565b6065805460ff19169055565b600054610100900460ff16611bdf5760405162461bcd60e51b81526004016106cd90612849565b6060611ff88484600085612065565b949350505050565b61200981611e55565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108ea838360405180606001604052806027815260200161294a60279139612140565b6060824710156120c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106cd565b600080866001600160a01b031685876040516120e291906128da565b60006040518083038185875af1925050503d806000811461211f576040519150601f19603f3d011682016040523d82523d6000602084013e612124565b606091505b5091509150612135878383876121b8565b979650505050505050565b6060600080856001600160a01b03168560405161215d91906128da565b600060405180830381855af49150503d8060008114612198576040519150601f19603f3d011682016040523d82523d6000602084013e61219d565b606091505b50915091506121ae868383876121b8565b9695505050505050565b60608315612227578251600003612220576001600160a01b0385163b6122205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106cd565b5081611ff8565b611ff8838381511561223c5781518083602001fd5b8060405162461bcd60e51b81526004016106cd91906128f6565b6000806040838503121561226957600080fd5b50508035926020909101359150565b6001600160a01b038116811461088357600080fd5b60006020828403121561229f57600080fd5b81356122aa81612278565b9392505050565b600080604083850312156122c457600080fd5b8235915060208301356122d681612278565b809150509250929050565b600080604083850312156122f457600080fd5b82356122ff81612278565b915060208301356122d681612278565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561233857600080fd5b823561234381612278565b9150602083013567ffffffffffffffff8082111561236057600080fd5b818501915085601f83011261237457600080fd5b8135818111156123865761238661230f565b604051601f8201601f19908116603f011681019083821181831017156123ae576123ae61230f565b816040528281528860208487010111156123c757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f8401126123fb57600080fd5b50813567ffffffffffffffff81111561241357600080fd5b6020830191508360208260051b850101111561242e57600080fd5b9250929050565b6000806000806040858703121561244b57600080fd5b843567ffffffffffffffff8082111561246357600080fd5b61246f888389016123e9565b9096509450602087013591508082111561248857600080fd5b50612495878288016123e9565b95989497509550505050565b6000806000606084860312156124b657600080fd5b83356124c181612278565b925060208401356124d181612278565b929592945050506040919091013590565b6000602082840312156124f457600080fd5b5035919050565b6000806040838503121561250e57600080fd5b8235600381106122ff57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561254557600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156108ed576108ed6125e4565b600181811c9082168061262157607f821691505b60208210810361264157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610cd2576000816000526020600020601f850160051c810160208610156126705750805b601f850160051c820191505b8181101561268f5782815560010161267c565b505050505050565b815167ffffffffffffffff8111156126b1576126b161230f565b6126c5816126bf845461260d565b84612647565b602080601f8311600181146126fa57600084156126e25750858301515b600019600386901b1c1916600185901b17855561268f565b600085815260208120601f198616915b828110156127295788860151825594840194600190910190840161270a565b50858210156127475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083526000845461276b8161260d565b806020870152604060018084166000811461278d57600181146127a9576127d9565b60ff19851660408a0152604084151560051b8a010195506127d9565b89600052602060002060005b858110156127d05781548b82018601529083019088016127b5565b8a016040019650505b509398975050505050505050565b808201808211156108ed576108ed6125e4565b80820281158282048414176108ed576108ed6125e4565b60008261282e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156128a657600080fd5b815180151581146122aa57600080fd5b60005b838110156128d15781810151838201526020016128b9565b50506000910152565b600082516128ec8184602087016128b6565b9190910192915050565b60208152600082518060208401526129158160408501602087016128b6565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209fdbe3a01f6b9d5348d8d88c0b4604b4097d5a29adaf64a775dbb4c70f3722f164736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
