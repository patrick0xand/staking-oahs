/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiveAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestWithdrew",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
      {
        internalType: "enum Storage.Period",
        name: "period",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516125bd61011860003960008181610579015281816105c201528181610f8e01528181610fce015261105d01526125bd6000f3fe6080604052600436106101405760003560e01c806349c64c0d116100b657806385790d881161006f57806385790d88146103965780638da5cb5b146103b6578063e8990524146103e8578063f2fde38b14610490578063f7c618c1146104b0578063ffa21efe146104d157600080fd5b806349c64c0d1461030e5780634f1ef2861461032157806352d1902d146103345780635c975abb14610349578063715018a61461036c5780638456cb591461038157600080fd5b80633659cfe6116101085780633659cfe614610259578063379607f5146102795780633b1ad44c146102995780633f4ba83a146102b9578063441a3e70146102ce578063485cc955146102ee57600080fd5b8063081e3eda146101455780631526fe271461016a57806316934fc4146101b65780631ab06ee5146102065780632694998414610228575b600080fd5b34801561015157600080fd5b50610137545b6040519081526020015b60405180910390f35b34801561017657600080fd5b5061018a610185366004611eb5565b6104f1565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610161565b3480156101c257600080fd5b5061018a6101d1366004611ee3565b6101366020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b34801561021257600080fd5b50610226610221366004611f07565b610539565b005b34801561023457600080fd5b5061024265ffffffffffff81565b60405165ffffffffffff9091168152602001610161565b34801561026557600080fd5b50610226610274366004611ee3565b61056f565b34801561028557600080fd5b50610226610294366004611eb5565b610657565b3480156102a557600080fd5b506102426102b4366004611f29565b610814565b3480156102c557600080fd5b50610226610884565b3480156102da57600080fd5b506102266102e9366004611f07565b610896565b3480156102fa57600080fd5b50610226610309366004611f59565b610adf565b61022661031c366004611f07565b610de1565b61022661032f366004611f9d565b610f84565b34801561034057600080fd5b50610157611050565b34801561035557600080fd5b5060655460ff166040519015158152602001610161565b34801561037857600080fd5b50610226611103565b34801561038d57600080fd5b50610226611115565b3480156103a257600080fd5b506101576103b1366004611f29565b611125565b3480156103c257600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610161565b3480156103f457600080fd5b50610479610403366004611f29565b61013860209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b0398891699979098169795969495939492939192909160ff808216916101009004168b565b6040516101619b9a99989796959493929190612077565b34801561049c57600080fd5b506102266104ab366004611ee3565b611200565b3480156104bc57600080fd5b5061013a546103d0906001600160a01b031681565b3480156104dd57600080fd5b506102266104ec366004612106565b611276565b610137818154811061050257600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b610541611441565b80610137838154811061055657610556612128565b9060005260206000209060040201600101819055505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105c05760405162461bcd60e51b81526004016105b79061213e565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610609600080516020612541833981519152546001600160a01b031690565b6001600160a01b03161461062f5760405162461bcd60e51b81526004016105b79061218a565b6106388161149b565b60408051600080825260208201909252610654918391906114a3565b50565b61065f61160e565b61013a546001600160a01b03166106b85760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e7472616374000000000000000060448201526064016105b7565b6000818152610138602090815260408083203384529091529020600981015461013090610100900460ff16156107015760405162461bcd60e51b81526004016105b79190612210565b508054610131906001600160a01b031633146107305760405162461bcd60e51b81526004016105b79190612210565b50600061073d8333611125565b9050600081116107845760405162461bcd60e51b81526020600482015260126024820152716e6f20746f6b656e7320746f20636c61696d60701b60448201526064016105b7565b6000600583015561013a546001600160a01b03166107a3813384611667565b818360070160008282546107b791906122b6565b909155505061013a5460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a3505050610654600160fb55565b6000828152610138602090815260408083206001600160a01b038516845290915281206002015461084b5765ffffffffffff61087b565b6000838152610138602090815260408083206001600160a01b038616845290915290206008015461087b906116d1565b90505b92915050565b61088c611441565b61089461172d565b565b61089e61160e565b600081116108ee5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e203000000000000060448201526064016105b7565b6108f88233610814565b65ffffffffffff16421161094e5760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b6564000060448201526064016105b7565b600061095a833361177f565b905080600201548211156109b05760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e740060448201526064016105b7565b600981015461013090610100900460ff16156109df5760405162461bcd60e51b81526004016105b79190612210565b508054610131906001600160a01b03163314610a0e5760405162461bcd60e51b81526004016105b79190612210565b50610a18826117e6565b6001600160a01b0316816002016000828254610a3491906122c9565b909155505060018101546001600160a01b0316610a7e57604051339083156108fc029084906000818181858888f19350505050158015610a78573d6000803e3d6000fd5b50610a99565b60018101546001600160a01b0316610a97813385611667565b505b604051828152839033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a350610adb600160fb55565b5050565b600054610100900460ff1615808015610aff5750600054600160ff909116105b80610b195750303b158015610b19575060005460ff166001145b610b7c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105b7565b6000805460ff191660011790558015610b9f576000805461ff0019166101001790555b610ba761183f565b610baf61186e565b610bb761189d565b60006101395561013a80546001600160a01b0319166001600160a01b038416179055610be283611200565b60408051808201909152601281527108aa4a4be929cac82989288be988a9c8ea8960731b602082015261012d90610c19908261232c565b506040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012e90610c53908261232c565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012f90610c96908261232c565b5060408051808201909152601881527f4552525f555345525f5354414b455f434f4d504c455445440000000000000000602082015261013090610cd9908261232c565b5060408051808201909152601c81527f4552525f494e56414c49445f555345525f5354414b455f4f574e455200000000602082015261013190610d1c908261232c565b5060408051808201909152601b81527f4552525f4e4f5f494e5445524553545f544f5f57495448445241570000000000602082015261013290610d5f908261232c565b5060405180606001604052806022815260200161251f6022913961013390610d87908261232c565b5060646101345562015180610135558015610ddc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610de961160e565b610df16118cc565b60008111610e415760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e2030000000000000000060448201526064016105b7565b60006101378381548110610e5757610e57612128565b60009182526020909120600490910201600381015490915061012e9060ff16610e935760405162461bcd60e51b81526004016105b79190612210565b5080546001600160a01b03168015610ebf57610eba6001600160a01b038216333086611912565b610ee4565b61012f348414610ee25760405162461bcd60e51b81526004016105b79190612210565b505b6000610ef0853361177f565b9050610f0a848260020154610f0591906122b6565b6117e6565b6001600160a01b03168160020181905550610f33836002015442610f2e91906122b6565b6116d1565b65ffffffffffff166008820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610adb600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fcc5760405162461bcd60e51b81526004016105b79061213e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611015600080516020612541833981519152546001600160a01b031690565b6001600160a01b03161461103b5760405162461bcd60e51b81526004016105b79061218a565b6110448261149b565b610adb828260016114a3565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110f05760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105b7565b5060008051602061254183398151915290565b61110b611441565b6108946000611950565b61111d611441565b6108946119a2565b600080610137848154811061113c5761113c612128565b60009182526020808320878452610138825260408085206001600160a01b0389168652909252922060068101546004909202909201925042116111845760009250505061087e565b600081600601544261119691906122c9565b905060006111b184600201548460060154610f2e91906122b6565b90508065ffffffffffff1642116111cf57600094505050505061087e565b600084600101546101345485600201546111e991906123ec565b6111f39190612403565b955061087e945050505050565b611208611441565b6001600160a01b03811661126d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b7565b61065481611950565b61127e611441565b6000808084600281111561129457611294612061565b036112a857506103e8905062093a80611340565b60018460028111156112bc576112bc612061565b036112d057506105dc9050624f1a00611340565b60028460028111156112e4576112e4612061565b036112f857506107d09050629e3400611340565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f6460448201526064016105b7565b604080516080810182526001600160a01b039485168152617530602082019081529181019283526001606082018181526101378054928301815560005291517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa1600490920291820180546001600160a01b031916919097161790955590517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa285015590517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa3840155517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa4909201805460ff1916921515929092179091555050565b6033546001600160a01b031633146108945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b7565b610654611441565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156114d657610ddc836119df565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611530575060408051601f3d908101601f1916820190925261152d91810190612425565b60015b6115935760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105b7565b60008051602061254183398151915281146116025760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105b7565b50610ddc838383611a7b565b600260fb54036116605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105b7565b600260fb55565b6040516001600160a01b038316602482015260448101829052610ddc90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611aa0565b600160fb55565b600065ffffffffffff8211156117295760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e20343820626974730000000060448201526064016105b7565b5090565b611735611b75565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000828152610138602090815260408083206001600160a01b03851684529091528120906117ad8484611125565b9050808260050160008282546117c391906122b6565b909155506117d29050426116d1565b65ffffffffffff1660068301555092915050565b60006001600160a01b038211156117295760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e20313630206269747300000060448201526064016105b7565b600054610100900460ff166118665760405162461bcd60e51b81526004016105b79061243e565b610894611bbe565b600054610100900460ff166118955760405162461bcd60e51b81526004016105b79061243e565b610894611bee565b600054610100900460ff166118c45760405162461bcd60e51b81526004016105b79061243e565b610894611c21565b60655460ff16156108945760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105b7565b6040516001600160a01b038085166024830152831660448201526064810182905261194a9085906323b872dd60e01b90608401611693565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6119aa6118cc565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117623390565b6001600160a01b0381163b611a4c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105b7565b60008051602061254183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a8483611c48565b600082511180611a915750805b15610ddc5761194a8383611c88565b6000611af5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611cad9092919063ffffffff16565b9050805160001480611b16575080806020019051810190611b169190612489565b610ddc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105b7565b60655460ff166108945760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105b7565b600054610100900460ff16611be55760405162461bcd60e51b81526004016105b79061243e565b61089433611950565b600054610100900460ff16611c155760405162461bcd60e51b81526004016105b79061243e565b6065805460ff19169055565b600054610100900460ff166116ca5760405162461bcd60e51b81526004016105b79061243e565b611c51816119df565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061087b838360405180606001604052806027815260200161256160279139611cc4565b6060611cbc8484600085611d3c565b949350505050565b6060600080856001600160a01b031685604051611ce191906124cf565b600060405180830381855af49150503d8060008114611d1c576040519150601f19603f3d011682016040523d82523d6000602084013e611d21565b606091505b5091509150611d3286838387611e17565b9695505050505050565b606082471015611d9d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105b7565b600080866001600160a01b03168587604051611db991906124cf565b60006040518083038185875af1925050503d8060008114611df6576040519150601f19603f3d011682016040523d82523d6000602084013e611dfb565b606091505b5091509150611e0c87838387611e17565b979650505050505050565b60608315611e86578251600003611e7f576001600160a01b0385163b611e7f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105b7565b5081611cbc565b611cbc8383815115611e9b5781518083602001fd5b8060405162461bcd60e51b81526004016105b791906124eb565b600060208284031215611ec757600080fd5b5035919050565b6001600160a01b038116811461065457600080fd5b600060208284031215611ef557600080fd5b8135611f0081611ece565b9392505050565b60008060408385031215611f1a57600080fd5b50508035926020909101359150565b60008060408385031215611f3c57600080fd5b823591506020830135611f4e81611ece565b809150509250929050565b60008060408385031215611f6c57600080fd5b8235611f7781611ece565b91506020830135611f4e81611ece565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611fb057600080fd5b8235611fbb81611ece565b9150602083013567ffffffffffffffff80821115611fd857600080fd5b818501915085601f830112611fec57600080fd5b813581811115611ffe57611ffe611f87565b604051601f8201601f19908116603f0116810190838211818310171561202657612026611f87565b8160405282815288602084870101111561203f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038c811682528b166020820152604081018a9052606081018990526080810188905260a0810187905260c0810186905260e0810185905261010081018490526101608101600384106120e057634e487b7160e01b600052602160045260246000fd5b836101208301526120f661014083018415159052565b9c9b505050505050505050505050565b6000806040838503121561211957600080fd5b823560038110611f7757600080fd5b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c908216806121ea57607f821691505b60208210810361220a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612224816121d6565b8060208701526040600180841660008114612246576001811461226257612292565b60ff19851660408a0152604084151560051b8a01019550612292565b89600052602060002060005b858110156122895781548b820186015290830190880161226e565b8a016040019650505b509398975050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561087e5761087e6122a0565b8181038181111561087e5761087e6122a0565b601f821115610ddc576000816000526020600020601f850160051c810160208610156123055750805b601f850160051c820191505b8181101561232457828155600101612311565b505050505050565b815167ffffffffffffffff81111561234657612346611f87565b61235a8161235484546121d6565b846122dc565b602080601f83116001811461238f57600084156123775750858301515b600019600386901b1c1916600185901b178555612324565b600085815260208120601f198616915b828110156123be5788860151825594840194600190910190840161239f565b50858210156123dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761087e5761087e6122a0565b60008261242057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561243757600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561249b57600080fd5b81518015158114611f0057600080fd5b60005b838110156124c65781810151838201526020016124ae565b50506000910152565b600082516124e18184602087016124ab565b9190910192915050565b602081526000825180602084015261250a8160408501602087016124ab565b601f01601f1916919091016040019291505056fe4552525f494e5445524553545f544f5f57495448445241575f434f4d504c45544544360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220893c783e1ec7b27f25610d79f60bf4f06f3ec922c513967de66cb6ce59abffbf64736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
