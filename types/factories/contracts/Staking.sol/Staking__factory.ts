/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "RewardTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_convertRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161255f610118600039600081816105b4015281816105fd01528181610de001528181610e200152610eaf015261255f6000f3fe60806040526004361061019c5760003560e01c80635c975abb116100ec578063a415814d1161008a578063ec85842511610064578063ec858425146104f3578063f2fde38b14610513578063f7c618c114610533578063ffa21efe1461055457600080fd5b8063a415814d14610419578063d5a44f8614610439578063e89905241461048557600080fd5b806385790d88116100c657806385790d88146103925780638aee8127146103b25780638da5cb5b146103d257806393ce53431461040457600080fd5b80635c975abb14610345578063715018a6146103685780638456cb591461037d57600080fd5b8063441a3e701161015957806349c64c0d1161013357806349c64c0d146102f55780634e71d92d146103085780634f1ef2861461031d57806352d1902d1461033057600080fd5b8063441a3e701461026e578063463c37a51461028e578063485cc955146102d557600080fd5b8063081e3eda146101a15780631ab06ee5146101c657806326949984146101e85780633659cfe6146102195780633b1ad44c146102395780633f4ba83a14610259575b600080fd5b3480156101ad57600080fd5b50610130545b6040519081526020015b60405180910390f35b3480156101d257600080fd5b506101e66101e1366004611f08565b610574565b005b3480156101f457600080fd5b5061020265ffffffffffff81565b60405165ffffffffffff90911681526020016101bd565b34801561022557600080fd5b506101e6610234366004611f3f565b6105aa565b34801561024557600080fd5b50610202610254366004611f63565b610692565b34801561026557600080fd5b506101e66106ff565b34801561027a57600080fd5b506101e6610289366004611f08565b610711565b34801561029a57600080fd5b506101b36102a9366004611f63565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b3480156102e157600080fd5b506101e66102f0366004611f93565b61091a565b6101e6610303366004611f08565b610ae7565b34801561031457600080fd5b506101e6610c84565b6101e661032b366004611fd7565b610dd6565b34801561033c57600080fd5b506101b3610ea2565b34801561035157600080fd5b5060655460ff1660405190151581526020016101bd565b34801561037457600080fd5b506101e6610f55565b34801561038957600080fd5b506101e6610f67565b34801561039e57600080fd5b506101b36103ad366004611f63565b610f77565b3480156103be57600080fd5b506101e66103cd366004611f3f565b611029565b3480156103de57600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101bd565b34801561041057600080fd5b506101b36110d0565b34801561042557600080fd5b506101b3610434366004611f63565b61115c565b34801561044557600080fd5b5061045961045436600461209b565b611197565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101bd565b34801561049157600080fd5b506104d36104a0366004611f63565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101bd565b3480156104ff57600080fd5b506101b361050e366004611f63565b6111df565b34801561051f57600080fd5b506101e661052e366004611f3f565b611261565b34801561053f57600080fd5b50610132546103ec906001600160a01b031681565b34801561056057600080fd5b506101e661056f3660046120b4565b6112d7565b61057c611494565b806101308381548110610591576105916120d6565b9060005260206000209060040201600101819055505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105fb5760405162461bcd60e51b81526004016105f2906120ec565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106446000805160206124e3833981519152546001600160a01b031690565b6001600160a01b03161461066a5760405162461bcd60e51b81526004016105f290612138565b610673816114ee565b6040805160008082526020820190925261068f918391906114f6565b50565b6000828152610131602090815260408083206001600160a01b03851684529091528120546106c65765ffffffffffff6106f6565b6000838152610131602090815260408083206001600160a01b03861684529091529020600301546106f690611661565b90505b92915050565b610707611494565b61070f6116bd565b565b61071961170f565b600081116107695760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e203000000000000060448201526064016105f2565b6107738233610692565b65ffffffffffff1642116107c95760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b6564000060448201526064016105f2565b600061013083815481106107df576107df6120d6565b9060005260206000209060040201905060006107fb8433611768565b805490915083111561084f5760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e740060448201526064016105f2565b610858836117cf565b6001600160a01b0316816000016000828254610874919061219a565b909155505081546001600160a01b03166108bb57604051339084156108fc029085906000818181858888f193505050501580156108b5573d6000803e3d6000fd5b506108d3565b81546001600160a01b03166108d1813386611828565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610916600160fb55565b5050565b600054610100900460ff161580801561093a5750600054600160ff909116105b806109545750303b158015610954575060005460ff166001145b6109b75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f2565b6000805460ff1916600117905580156109da576000805461ff0019166101001790555b6109e2611892565b6109ea6118c1565b6109f26118f0565b61013280546001600160a01b0319166001600160a01b038416179055610a1783611261565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610a509082612237565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610a939082612237565b50620186a061012f558015610ae2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610aef61170f565b610af761191f565b60008111610b475760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e2030000000000000000060448201526064016105f2565b60006101308381548110610b5d57610b5d6120d6565b60009182526020909120600490910201600381015490915061012d9060ff16610b995760405162461bcd60e51b81526004016105f291906122f7565b5080546001600160a01b03168015610bc557610bc06001600160a01b038216333086611965565b610bea565b61012e348414610be85760405162461bcd60e51b81526004016105f291906122f7565b505b6000610bf68533611768565b9050610c10848260000154610c0b9190612387565b6117cf565b6001600160a01b031681556002830154610c3390610c2e9042612387565b611661565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610916600160fb55565b610c8c61170f565b610132546001600160a01b0316610ce55760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e7472616374000000000000000060448201526064016105f2565b60005b61013054811015610dcb5760008181526101316020908152604080832033845290915281206001810154839203610d20575050610dc3565b6000610d2c83336111df565b905080600003610d3e57505050610dc3565b60006002830155610d4e42611661565b65ffffffffffff166001830155610132546001600160a01b0316610d73813384611828565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a3505050505b600101610ce8565b5061070f600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e1e5760405162461bcd60e51b81526004016105f2906120ec565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e676000805160206124e3833981519152546001600160a01b031690565b6001600160a01b031614610e8d5760405162461bcd60e51b81526004016105f290612138565b610e96826114ee565b610916828260016114f6565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f425760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105f2565b506000805160206124e383398151915290565b610f5d611494565b61070f60006119a3565b610f6f611494565b61070f6119f5565b6000828152610131602090815260408083206001600160a01b0385168452909152812060018101544211610faf5760009150506106f9565b8060010154816003015411610fc85760009150506106f9565b6000816001015442610fda919061219a565b905081600301544211610ffd576001820154610ff6904261219a565b9050611014565b81600101548260030154611011919061219a565b90505b8154611020908261239a565b95945050505050565b61103161170f565b611039611494565b610132546001600160a01b031660006110506110d0565b9050801561106c5761106c6001600160a01b0383163383611828565b61013280546001600160a01b0319166001600160a01b0385811691821790925560405183815290918416907fc133375757269458a329c73a344c8ef483535870f46ed4cd332f857a5ef525d09060200160405180910390a3505061068f600160fb55565b610132546000906001600160a01b03166110ea5750600090565b610132546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115791906123b1565b905090565b6000828152610131602090815260408083206001600160a01b038516845290915281206002015461118d8484610f77565b6106f69190612387565b61013081815481106111a857600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b60008061013084815481106111f6576111f66120d6565b600091825260209091206101325460049092020191506001600160a01b0316158061122357506001810154155b156112325760009150506106f9565b806001015461012f54611245868661115c565b61124f919061239a565b61125991906123ca565b9150506106f9565b611269611494565b6001600160a01b0381166112ce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f2565b61068f816119a3565b6112df611494565b6000808360028111156112f4576112f46123ec565b03611303575062093a80611391565b6001836002811115611317576113176123ec565b036113265750624f1a00611391565b600283600281111561133a5761133a6123ec565b036113495750629e3400611391565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f6460448201526064016105f2565b604080516080810182526001600160a01b03938416815265560ba43ba000602082019081529181019283526001606082018181526101308054928301815560005291517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b031916919096161790945590517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf3584015590517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36830155517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909101805460ff191691151591909117905550565b6033546001600160a01b0316331461070f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f2565b61068f611494565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561152957610ae283611a32565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611583575060408051601f3d908101601f19168201909252611580918101906123b1565b60015b6115e65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105f2565b6000805160206124e383398151915281146116555760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105f2565b50610ae2838383611ace565b600065ffffffffffff8211156116b95760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e20343820626974730000000060448201526064016105f2565b5090565b6116c5611af3565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260fb54036117615760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105f2565b600260fb55565b6000828152610131602090815260408083206001600160a01b03851684529091528120906117968484610f77565b9050808260020160008282546117ac9190612387565b909155506117bb905042611661565b65ffffffffffff1660018301555092915050565b60006001600160a01b038211156116b95760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e20313630206269747300000060448201526064016105f2565b6040516001600160a01b038316602482015260448101829052610ae290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b3c565b600160fb55565b600054610100900460ff166118b95760405162461bcd60e51b81526004016105f290612402565b61070f611c11565b600054610100900460ff166118e85760405162461bcd60e51b81526004016105f290612402565b61070f611c41565b600054610100900460ff166119175760405162461bcd60e51b81526004016105f290612402565b61070f611c74565b60655460ff161561070f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105f2565b6040516001600160a01b038085166024830152831660448201526064810182905261199d9085906323b872dd60e01b90608401611854565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6119fd61191f565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116f23390565b6001600160a01b0381163b611a9f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105f2565b6000805160206124e383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611ad783611c9b565b600082511180611ae45750805b15610ae25761199d8383611cdb565b60655460ff1661070f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105f2565b6000611b91826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d009092919063ffffffff16565b9050805160001480611bb2575080806020019051810190611bb2919061244d565b610ae25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105f2565b600054610100900460ff16611c385760405162461bcd60e51b81526004016105f290612402565b61070f336119a3565b600054610100900460ff16611c685760405162461bcd60e51b81526004016105f290612402565b6065805460ff19169055565b600054610100900460ff1661188b5760405162461bcd60e51b81526004016105f290612402565b611ca481611a32565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106f6838360405180606001604052806027815260200161250360279139611d17565b6060611d0f8484600085611d8f565b949350505050565b6060600080856001600160a01b031685604051611d349190612493565b600060405180830381855af49150503d8060008114611d6f576040519150601f19603f3d011682016040523d82523d6000602084013e611d74565b606091505b5091509150611d8586838387611e6a565b9695505050505050565b606082471015611df05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105f2565b600080866001600160a01b03168587604051611e0c9190612493565b60006040518083038185875af1925050503d8060008114611e49576040519150601f19603f3d011682016040523d82523d6000602084013e611e4e565b606091505b5091509150611e5f87838387611e6a565b979650505050505050565b60608315611ed9578251600003611ed2576001600160a01b0385163b611ed25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105f2565b5081611d0f565b611d0f8383815115611eee5781518083602001fd5b8060405162461bcd60e51b81526004016105f291906124af565b60008060408385031215611f1b57600080fd5b50508035926020909101359150565b6001600160a01b038116811461068f57600080fd5b600060208284031215611f5157600080fd5b8135611f5c81611f2a565b9392505050565b60008060408385031215611f7657600080fd5b823591506020830135611f8881611f2a565b809150509250929050565b60008060408385031215611fa657600080fd5b8235611fb181611f2a565b91506020830135611f8881611f2a565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611fea57600080fd5b8235611ff581611f2a565b9150602083013567ffffffffffffffff8082111561201257600080fd5b818501915085601f83011261202657600080fd5b81358181111561203857612038611fc1565b604051601f8201601f19908116603f0116810190838211818310171561206057612060611fc1565b8160405282815288602084870101111561207957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156120ad57600080fd5b5035919050565b600080604083850312156120c757600080fd5b823560038110611fb157600080fd5b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156106f9576106f9612184565b600181811c908216806121c157607f821691505b6020821081036121e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ae2576000816000526020600020601f850160051c810160208610156122105750805b601f850160051c820191505b8181101561222f5782815560010161221c565b505050505050565b815167ffffffffffffffff81111561225157612251611fc1565b6122658161225f84546121ad565b846121e7565b602080601f83116001811461229a57600084156122825750858301515b600019600386901b1c1916600185901b17855561222f565b600085815260208120601f198616915b828110156122c9578886015182559484019460019091019084016122aa565b50858210156122e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083526000845461230b816121ad565b806020870152604060018084166000811461232d576001811461234957612379565b60ff19851660408a0152604084151560051b8a01019550612379565b89600052602060002060005b858110156123705781548b8201860152908301908801612355565b8a016040019650505b509398975050505050505050565b808201808211156106f9576106f9612184565b80820281158282048414176106f9576106f9612184565b6000602082840312156123c357600080fd5b5051919050565b6000826123e757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561245f57600080fd5b81518015158114611f5c57600080fd5b60005b8381101561248a578181015183820152602001612472565b50506000910152565b600082516124a581846020870161246f565b9190910192915050565b60208152600082518060208401526124ce81604085016020870161246f565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ad918763d6536147e29dcfc4e01357039e34905e4df2a03b1b150bd3de8275f764736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
