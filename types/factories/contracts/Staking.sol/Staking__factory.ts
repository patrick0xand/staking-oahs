/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receiveAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
      {
        internalType: "enum Storage.Period",
        name: "period",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161273b610118600039600081816106410152818161068a0152818161103d0152818161107d015261110c015261273b6000f3fe6080604052600436106101815760003560e01c80634f1ef286116100d15780638da5cb5b1161008a578063ec85842511610064578063ec85842514610538578063f2fde38b14610558578063f7c618c114610578578063ffa21efe1461059957600080fd5b80638da5cb5b1461043e578063a415814d14610470578063e89905241461049057600080fd5b80634f1ef286146103a957806352d1902d146103bc5780635c975abb146103d1578063715018a6146103f45780638456cb591461040957806385790d881461041e57600080fd5b8063379607f51161013e578063441a3e7011610118578063441a3e701461030f578063463c37a51461032f578063485cc9551461037657806349c64c0d1461039657600080fd5b8063379607f5146102ba5780633b1ad44c146102da5780633f4ba83a146102fa57600080fd5b8063081e3eda146101865780631526fe27146101ab57806316934fc4146101f75780631ab06ee51461024757806326949984146102695780633659cfe61461029a575b600080fd5b34801561019257600080fd5b50610137545b6040519081526020015b60405180910390f35b3480156101b757600080fd5b506101cb6101c6366004612033565b6105b9565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101a2565b34801561020357600080fd5b506101cb610212366004612061565b6101366020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b34801561025357600080fd5b50610267610262366004612085565b610601565b005b34801561027557600080fd5b5061028365ffffffffffff81565b60405165ffffffffffff90911681526020016101a2565b3480156102a657600080fd5b506102676102b5366004612061565b610637565b3480156102c657600080fd5b506102676102d5366004612033565b61071f565b3480156102e657600080fd5b506102836102f53660046120a7565b6108c3565b34801561030657600080fd5b50610267610933565b34801561031b57600080fd5b5061026761032a366004612085565b610945565b34801561033b57600080fd5b5061019861034a3660046120a7565b6000918252610138602090815260408084206001600160a01b0393909316845291905290206007015490565b34801561038257600080fd5b506102676103913660046120d7565b610b8e565b6102676103a4366004612085565b610e90565b6102676103b736600461211b565b611033565b3480156103c857600080fd5b506101986110ff565b3480156103dd57600080fd5b5060655460ff1660405190151581526020016101a2565b34801561040057600080fd5b506102676111b2565b34801561041557600080fd5b506102676111c4565b34801561042a57600080fd5b506101986104393660046120a7565b6111d4565b34801561044a57600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101a2565b34801561047c57600080fd5b5061019861048b3660046120a7565b6112af565b34801561049c57600080fd5b506105216104ab3660046120a7565b61013860209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b0398891699979098169795969495939492939192909160ff808216916101009004168b565b6040516101a29b9a999897969594939291906121f5565b34801561054457600080fd5b506101986105533660046120a7565b6112ea565b34801561056457600080fd5b50610267610573366004612061565b61135e565b34801561058457600080fd5b5061013a54610458906001600160a01b031681565b3480156105a557600080fd5b506102676105b4366004612284565b6113d4565b61013781815481106105ca57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b6106096115bf565b80610137838154811061061e5761061e6122a6565b9060005260206000209060040201600101819055505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106885760405162461bcd60e51b815260040161067f906122bc565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106d16000805160206126bf833981519152546001600160a01b031690565b6001600160a01b0316146106f75760405162461bcd60e51b815260040161067f90612308565b61070081611619565b6040805160008082526020820190925261071c91839190611621565b50565b61072761178c565b61013a546001600160a01b03166107805760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e74726163740000000000000000604482015260640161067f565b6000818152610138602090815260408083203384529091529020600981015461013090610100900460ff16156107c95760405162461bcd60e51b815260040161067f919061238e565b508054610131906001600160a01b031633146107f85760405162461bcd60e51b815260040161067f919061238e565b50600061080583336111d4565b90506000811161084c5760405162461bcd60e51b81526020600482015260126024820152716e6f20746f6b656e7320746f20636c61696d60701b604482015260640161067f565b6000600783015561013a546001600160a01b031661086b8133846117e5565b61013a5460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a350505061071c600160fb55565b6000828152610138602090815260408083206001600160a01b03851684529091528120600201546108fa5765ffffffffffff61092a565b6000838152610138602090815260408083206001600160a01b038616845290915290206008015461092a9061184f565b90505b92915050565b61093b6115bf565b6109436118ab565b565b61094d61178c565b6000811161099d5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e2030000000000000604482015260640161067f565b6109a782336108c3565b65ffffffffffff1642116109fd5760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b65640000604482015260640161067f565b6000610a0983336118fd565b90508060020154821115610a5f5760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e7400604482015260640161067f565b600981015461013090610100900460ff1615610a8e5760405162461bcd60e51b815260040161067f919061238e565b508054610131906001600160a01b03163314610abd5760405162461bcd60e51b815260040161067f919061238e565b50610ac782611964565b6001600160a01b0316816002016000828254610ae39190612434565b909155505060018101546001600160a01b0316610b2d57604051339083156108fc029084906000818181858888f19350505050158015610b27573d6000803e3d6000fd5b50610b48565b60018101546001600160a01b0316610b468133856117e5565b505b604051828152839033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a350610b8a600160fb55565b5050565b600054610100900460ff1615808015610bae5750600054600160ff909116105b80610bc85750303b158015610bc8575060005460ff166001145b610c2b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161067f565b6000805460ff191660011790558015610c4e576000805461ff0019166101001790555b610c566119bd565b610c5e6119ec565b610c66611a1b565b60006101395561013a80546001600160a01b0319166001600160a01b038416179055610c918361135e565b60408051808201909152601281527108aa4a4be929cac82989288be988a9c8ea8960731b602082015261012d90610cc89082612497565b506040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012e90610d029082612497565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012f90610d459082612497565b5060408051808201909152601881527f4552525f555345525f5354414b455f434f4d504c455445440000000000000000602082015261013090610d889082612497565b5060408051808201909152601c81527f4552525f494e56414c49445f555345525f5354414b455f4f574e455200000000602082015261013190610dcb9082612497565b5060408051808201909152601b81527f4552525f4e4f5f494e5445524553545f544f5f57495448445241570000000000602082015261013290610e0e9082612497565b5060405180606001604052806022815260200161269d6022913961013390610e369082612497565b5060646101345562015180610135558015610e8b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610e9861178c565b610ea0611a4a565b60008111610ef05760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e20300000000000000000604482015260640161067f565b60006101378381548110610f0657610f066122a6565b60009182526020909120600490910201600381015490915061012e9060ff16610f425760405162461bcd60e51b815260040161067f919061238e565b5080546001600160a01b03168015610f6e57610f696001600160a01b038216333086611a90565b610f93565b61012f348414610f915760405162461bcd60e51b815260040161067f919061238e565b505b6000610f9f85336118fd565b9050610fb9848260020154610fb49190612557565b611964565b6001600160a01b03168160020181905550610fe2836002015442610fdd9190612557565b61184f565b65ffffffffffff166008820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610b8a600160fb55565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361107b5760405162461bcd60e51b815260040161067f906122bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110c46000805160206126bf833981519152546001600160a01b031690565b6001600160a01b0316146110ea5760405162461bcd60e51b815260040161067f90612308565b6110f382611619565b610b8a82826001611621565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461119f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161067f565b506000805160206126bf83398151915290565b6111ba6115bf565b6109436000611ace565b6111cc6115bf565b610943611b20565b60008061013784815481106111eb576111eb6122a6565b60009182526020808320878452610138825260408085206001600160a01b0389168652909252922060068101546004909202909201925042116112335760009250505061092d565b60008160060154426112459190612434565b9050600061126084600201548460060154610fdd9190612557565b90508065ffffffffffff16421161127e57600094505050505061092d565b60008460010154610134548560020154611298919061256a565b6112a29190612581565b955061092d945050505050565b6000828152610138602090815260408083206001600160a01b03851684529091528120600701546112e084846111d4565b61092a9190612557565b6000806101378481548110611301576113016122a6565b6000918252602090912061013a5460049092020191506001600160a01b0316158061132e57506001810154155b1561133d57600091505061092d565b806001015461134c85856112af565b6113569190612581565b91505061092d565b6113666115bf565b6001600160a01b0381166113cb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067f565b61071c81611ace565b6113dc6115bf565b600080808460028111156113f2576113f26121df565b0361140657506103e8905062093a8061149e565b600184600281111561141a5761141a6121df565b0361142e57506105dc9050624f1a0061149e565b6002846002811115611442576114426121df565b0361145657506107d09050629e340061149e565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f64604482015260640161067f565b60006040518060800160405280856001600160a01b03168152602001836175306114c8919061256a565b8152602080820194909452600160409182018190526101378054918201815560005282517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa1600490920291820180546001600160a01b0319166001600160a01b03909216919091179055938201517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa28501558101517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa3840155606001517f43dc304bb3613567eca51c4fb9e7f3128bc51bba882a32550e891d6cbd8a0fa4909201805460ff19169215159290921790915550505050565b6033546001600160a01b031633146109435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b61071c6115bf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561165457610e8b83611b5d565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116ae575060408051601f3d908101601f191682019092526116ab918101906125a3565b60015b6117115760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161067f565b6000805160206126bf83398151915281146117805760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161067f565b50610e8b838383611bf9565b600260fb54036117de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161067f565b600260fb55565b6040516001600160a01b038316602482015260448101829052610e8b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c1e565b600160fb55565b600065ffffffffffff8211156118a75760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e203438206269747300000000604482015260640161067f565b5090565b6118b3611cf3565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000828152610138602090815260408083206001600160a01b038516845290915281209061192b84846111d4565b9050808260070160008282546119419190612557565b9091555061195090504261184f565b65ffffffffffff1660068301555092915050565b60006001600160a01b038211156118a75760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e203136302062697473000000604482015260640161067f565b600054610100900460ff166119e45760405162461bcd60e51b815260040161067f906125bc565b610943611d3c565b600054610100900460ff16611a135760405162461bcd60e51b815260040161067f906125bc565b610943611d6c565b600054610100900460ff16611a425760405162461bcd60e51b815260040161067f906125bc565b610943611d9f565b60655460ff16156109435760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161067f565b6040516001600160a01b0380851660248301528316604482015260648101829052611ac89085906323b872dd60e01b90608401611811565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b28611a4a565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118e03390565b6001600160a01b0381163b611bca5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161067f565b6000805160206126bf83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611c0283611dc6565b600082511180611c0f5750805b15610e8b57611ac88383611e06565b6000611c73826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e2b9092919063ffffffff16565b9050805160001480611c94575080806020019051810190611c949190612607565b610e8b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161067f565b60655460ff166109435760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161067f565b600054610100900460ff16611d635760405162461bcd60e51b815260040161067f906125bc565b61094333611ace565b600054610100900460ff16611d935760405162461bcd60e51b815260040161067f906125bc565b6065805460ff19169055565b600054610100900460ff166118485760405162461bcd60e51b815260040161067f906125bc565b611dcf81611b5d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061092a83836040518060600160405280602781526020016126df60279139611e42565b6060611e3a8484600085611eba565b949350505050565b6060600080856001600160a01b031685604051611e5f919061264d565b600060405180830381855af49150503d8060008114611e9a576040519150601f19603f3d011682016040523d82523d6000602084013e611e9f565b606091505b5091509150611eb086838387611f95565b9695505050505050565b606082471015611f1b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161067f565b600080866001600160a01b03168587604051611f37919061264d565b60006040518083038185875af1925050503d8060008114611f74576040519150601f19603f3d011682016040523d82523d6000602084013e611f79565b606091505b5091509150611f8a87838387611f95565b979650505050505050565b60608315612004578251600003611ffd576001600160a01b0385163b611ffd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161067f565b5081611e3a565b611e3a83838151156120195781518083602001fd5b8060405162461bcd60e51b815260040161067f9190612669565b60006020828403121561204557600080fd5b5035919050565b6001600160a01b038116811461071c57600080fd5b60006020828403121561207357600080fd5b813561207e8161204c565b9392505050565b6000806040838503121561209857600080fd5b50508035926020909101359150565b600080604083850312156120ba57600080fd5b8235915060208301356120cc8161204c565b809150509250929050565b600080604083850312156120ea57600080fd5b82356120f58161204c565b915060208301356120cc8161204c565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561212e57600080fd5b82356121398161204c565b9150602083013567ffffffffffffffff8082111561215657600080fd5b818501915085601f83011261216a57600080fd5b81358181111561217c5761217c612105565b604051601f8201601f19908116603f011681019083821181831017156121a4576121a4612105565b816040528281528860208487010111156121bd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038c811682528b166020820152604081018a9052606081018990526080810188905260a0810187905260c0810186905260e08101859052610100810184905261016081016003841061225e57634e487b7160e01b600052602160045260246000fd5b8361012083015261227461014083018415159052565b9c9b505050505050505050505050565b6000806040838503121561229757600080fd5b8235600381106120f557600080fd5b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181811c9082168061236857607f821691505b60208210810361238857634e487b7160e01b600052602260045260246000fd5b50919050565b60006020808352600084546123a281612354565b80602087015260406001808416600081146123c457600181146123e057612410565b60ff19851660408a0152604084151560051b8a01019550612410565b89600052602060002060005b858110156124075781548b82018601529083019088016123ec565b8a016040019650505b509398975050505050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561092d5761092d61241e565b601f821115610e8b576000816000526020600020601f850160051c810160208610156124705750805b601f850160051c820191505b8181101561248f5782815560010161247c565b505050505050565b815167ffffffffffffffff8111156124b1576124b1612105565b6124c5816124bf8454612354565b84612447565b602080601f8311600181146124fa57600084156124e25750858301515b600019600386901b1c1916600185901b17855561248f565b600085815260208120601f198616915b828110156125295788860151825594840194600190910190840161250a565b50858210156125475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561092d5761092d61241e565b808202811582820484141761092d5761092d61241e565b60008261259e57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156125b557600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561261957600080fd5b8151801515811461207e57600080fd5b60005b8381101561264457818101518382015260200161262c565b50506000910152565b6000825161265f818460208701612629565b9190910192915050565b6020815260008251806020840152612688816040850160208701612629565b601f01601f1916919091016040019291505056fe4552525f494e5445524553545f544f5f57495448445241575f434f4d504c45544544360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220094c764c6062eebcc5081ce66e1ccb72fa7b96aa15cd4e5f351e104dc5bd4d4f64736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
