/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DevWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "RewardTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "emergencyTokenRetrieve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_convertRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516127216101186000396000818161075b0152818161079b01528181610f7a01528181610fba015261104901526127216000f3fe6080604052600436106101b75760003560e01c80635c975abb116100ec578063a415814d1161008a578063ec85842511610064578063ec8584251461052e578063f2fde38b1461054e578063f7c618c11461056e578063ffa21efe1461058f57600080fd5b8063a415814d14610454578063d5a44f8614610474578063e8990524146104c057600080fd5b806385790d88116100c657806385790d88146103cd5780638aee8127146103ed5780638da5cb5b1461040d57806393ce53431461043f57600080fd5b80635c975abb14610380578063715018a6146103a35780638456cb59146103b857600080fd5b8063441a3e701161015957806349c64c0d1161013357806349c64c0d146103305780634e71d92d146103435780634f1ef2861461035857806352d1902d1461036b57600080fd5b8063441a3e70146102a9578063463c37a5146102c9578063485cc9551461031057600080fd5b806326c654821161019557806326c65482146102345780633659cfe6146102545780633b1ad44c146102745780633f4ba83a1461029457600080fd5b8063081e3eda146101bc5780631ab06ee5146101e15780632694998414610203575b600080fd5b3480156101c857600080fd5b50610130545b6040519081526020015b60405180910390f35b3480156101ed57600080fd5b506102016101fc3660046120ca565b6105af565b005b34801561020f57600080fd5b5061021d65ffffffffffff81565b60405165ffffffffffff90911681526020016101d8565b34801561024057600080fd5b5061020161024f366004612101565b6105e5565b34801561026057600080fd5b5061020161026f366004612101565b610751565b34801561028057600080fd5b5061021d61028f366004612125565b610830565b3480156102a057600080fd5b5061020161089d565b3480156102b557600080fd5b506102016102c43660046120ca565b6108af565b3480156102d557600080fd5b506101ce6102e4366004612125565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b34801561031c57600080fd5b5061020161032b366004612155565b610ab8565b61020161033e3660046120ca565b610c81565b34801561034f57600080fd5b50610201610e1e565b610201610366366004612199565b610f70565b34801561037757600080fd5b506101ce61103c565b34801561038c57600080fd5b5060655460ff1660405190151581526020016101d8565b3480156103af57600080fd5b506102016110ef565b3480156103c457600080fd5b50610201611101565b3480156103d957600080fd5b506101ce6103e8366004612125565b611111565b3480156103f957600080fd5b50610201610408366004612101565b6111c3565b34801561041957600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101d8565b34801561044b57600080fd5b506101ce61126a565b34801561046057600080fd5b506101ce61046f366004612125565b6112f6565b34801561048057600080fd5b5061049461048f36600461225d565b611331565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101d8565b3480156104cc57600080fd5b5061050e6104db366004612125565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101d8565b34801561053a57600080fd5b506101ce610549366004612125565b611379565b34801561055a57600080fd5b50610201610569366004612101565b6113fb565b34801561057a57600080fd5b5061013254610427906001600160a01b031681565b34801561059b57600080fd5b506102016105aa366004612276565b611471565b6105b7611656565b8061013083815481106105cc576105cc612298565b9060005260206000209060040201600101819055505050565b6105ed611656565b60005b6101305481101561068857610130818154811061060f5761060f612298565b60009182526020909120600490910201546001600160a01b03908116908316036106805760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74207769746864726177204c5020746f6b656e730000000000000060448201526064015b60405180910390fd5b6001016105f0565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f391906122ae565b90506107096001600160a01b03841633836116b0565b604080516001600160a01b0385168152602081018390527f050d1c64cc22ce461b9bc14f6b73852566da02b03c155242bc63169d1fec42aa91015b60405180910390a1505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107995760405162461bcd60e51b8152600401610677906122c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107e26000805160206126a5833981519152546001600160a01b031690565b6001600160a01b0316146108085760405162461bcd60e51b815260040161067790612313565b61081181611713565b6040805160008082526020820190925261082d9183919061171b565b50565b6000828152610131602090815260408083206001600160a01b03851684529091528120546108645765ffffffffffff610894565b6000838152610131602090815260408083206001600160a01b038616845290915290206003015461089490611886565b90505b92915050565b6108a5611656565b6108ad6118e2565b565b6108b7611934565b600081116109075760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e20300000000000006044820152606401610677565b6109118233610830565b65ffffffffffff1642116109675760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b656400006044820152606401610677565b6000610130838154811061097d5761097d612298565b906000526020600020906004020190506000610999843361198d565b80549091508311156109ed5760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e74006044820152606401610677565b6109f6836119f4565b6001600160a01b0316816000016000828254610a129190612375565b909155505081546001600160a01b0316610a5957604051339084156108fc029085906000818181858888f19350505050158015610a53573d6000803e3d6000fd5b50610a71565b81546001600160a01b0316610a6f8133866116b0565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610ab4600160fb55565b5050565b600054610100900460ff1615808015610ad85750600054600160ff909116105b80610af25750303b158015610af2575060005460ff166001145b610b555760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610677565b6000805460ff191660011790558015610b78576000805461ff0019166101001790555b610b80611a54565b610b88611a83565b610b90611ab2565b61013280546001600160a01b0319166001600160a01b038416179055610bb5836113fb565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610bee9082612412565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610c319082612412565b50620186a061012f558015610c7c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610744565b505050565b610c89611934565b610c91611ae1565b60008111610ce15760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e203000000000000000006044820152606401610677565b60006101308381548110610cf757610cf7612298565b60009182526020909120600490910201600381015490915061012d9060ff16610d335760405162461bcd60e51b815260040161067791906124d2565b5080546001600160a01b03168015610d5f57610d5a6001600160a01b038216333086611b27565b610d84565b61012e348414610d825760405162461bcd60e51b815260040161067791906124d2565b505b6000610d90853361198d565b9050610daa848260000154610da59190612562565b6119f4565b6001600160a01b031681556002830154610dcd90610dc89042612562565b611886565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610ab4600160fb55565b610e26611934565b610132546001600160a01b0316610e7f5760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e747261637400000000000000006044820152606401610677565b60005b61013054811015610f655760008181526101316020908152604080832033845290915281206001810154839203610eba575050610f5d565b6000610ec68333611379565b905080600003610ed857505050610f5d565b60006002830155610ee842611886565b65ffffffffffff166001830155610132546001600160a01b0316610f0d8133846116b0565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a3505050505b600101610e82565b506108ad600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610fb85760405162461bcd60e51b8152600401610677906122c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110016000805160206126a5833981519152546001600160a01b031690565b6001600160a01b0316146110275760405162461bcd60e51b815260040161067790612313565b61103082611713565b610ab48282600161171b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110dc5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610677565b506000805160206126a583398151915290565b6110f7611656565b6108ad6000611b65565b611109611656565b6108ad611bb7565b6000828152610131602090815260408083206001600160a01b0385168452909152812060018101544211611149576000915050610897565b8060010154816003015411611162576000915050610897565b60008160010154426111749190612375565b9050816003015442116111975760018201546111909042612375565b90506111ae565b816001015482600301546111ab9190612375565b90505b81546111ba9082612575565b95945050505050565b6111cb611934565b6111d3611656565b610132546001600160a01b031660006111ea61126a565b90508015611206576112066001600160a01b03831633836116b0565b61013280546001600160a01b0319166001600160a01b0385811691821790925560405183815290918416907fc133375757269458a329c73a344c8ef483535870f46ed4cd332f857a5ef525d09060200160405180910390a3505061082d600160fb55565b610132546000906001600160a01b03166112845750600090565b610132546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156112cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f191906122ae565b905090565b6000828152610131602090815260408083206001600160a01b03851684529091528120600201546113278484611111565b6108949190612562565b610130818154811061134257600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b600080610130848154811061139057611390612298565b600091825260209091206101325460049092020191506001600160a01b031615806113bd57506001810154155b156113cc576000915050610897565b806001015461012f546113df86866112f6565b6113e99190612575565b6113f3919061258c565b915050610897565b611403611656565b6001600160a01b0381166114685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610677565b61082d81611b65565b611479611656565b6000600a81846002811115611490576114906125ae565b036114a05762093a809150611530565b60018460028111156114b4576114b46125ae565b036114c457624f1a009150611530565b60028460028111156114d8576114d86125ae565b036114e857629e34009150611530565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f646044820152606401610677565b60006040518060800160405280856001600160a01b031681526020018366035c746a54400061155f919061258c565b8152602080820195909552600160409182018190526101308054918201815560005282517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b0319166001600160a01b03909216919091179055948201517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf358601558101517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36850155606001517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909301805460ff19169315159390931790925550505050565b6033546001600160a01b031633146108ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610677565b6040516001600160a01b038316602482015260448101829052610c7c90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611bf4565b61082d611656565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561174e57610c7c83611cc9565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117a8575060408051601f3d908101601f191682019092526117a5918101906122ae565b60015b61180b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610677565b6000805160206126a5833981519152811461187a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610677565b50610c7c838383611d65565b600065ffffffffffff8211156118de5760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e2034382062697473000000006044820152606401610677565b5090565b6118ea611d8a565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260fb54036119865760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610677565b600260fb55565b6000828152610131602090815260408083206001600160a01b03851684529091528120906119bb8484611111565b9050808260020160008282546119d19190612562565b909155506119e0905042611886565b65ffffffffffff1660018301555092915050565b60006001600160a01b038211156118de5760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e2031363020626974730000006044820152606401610677565b600160fb55565b600054610100900460ff16611a7b5760405162461bcd60e51b8152600401610677906125c4565b6108ad611dd3565b600054610100900460ff16611aaa5760405162461bcd60e51b8152600401610677906125c4565b6108ad611e03565b600054610100900460ff16611ad95760405162461bcd60e51b8152600401610677906125c4565b6108ad611e36565b60655460ff16156108ad5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610677565b6040516001600160a01b0380851660248301528316604482015260648101829052611b5f9085906323b872dd60e01b906084016116dc565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611bbf611ae1565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119173390565b6000611c49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e5d9092919063ffffffff16565b9050805160001480611c6a575080806020019051810190611c6a919061260f565b610c7c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610677565b6001600160a01b0381163b611d365760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610677565b6000805160206126a583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611d6e83611e74565b600082511180611d7b5750805b15610c7c57611b5f8383611eb4565b60655460ff166108ad5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610677565b600054610100900460ff16611dfa5760405162461bcd60e51b8152600401610677906125c4565b6108ad33611b65565b600054610100900460ff16611e2a5760405162461bcd60e51b8152600401610677906125c4565b6065805460ff19169055565b600054610100900460ff16611a4d5760405162461bcd60e51b8152600401610677906125c4565b6060611e6c8484600085611ed9565b949350505050565b611e7d81611cc9565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061089483836040518060600160405280602781526020016126c560279139611fb4565b606082471015611f3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610677565b600080866001600160a01b03168587604051611f569190612655565b60006040518083038185875af1925050503d8060008114611f93576040519150601f19603f3d011682016040523d82523d6000602084013e611f98565b606091505b5091509150611fa98783838761202c565b979650505050505050565b6060600080856001600160a01b031685604051611fd19190612655565b600060405180830381855af49150503d806000811461200c576040519150601f19603f3d011682016040523d82523d6000602084013e612011565b606091505b50915091506120228683838761202c565b9695505050505050565b6060831561209b578251600003612094576001600160a01b0385163b6120945760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610677565b5081611e6c565b611e6c83838151156120b05781518083602001fd5b8060405162461bcd60e51b81526004016106779190612671565b600080604083850312156120dd57600080fd5b50508035926020909101359150565b6001600160a01b038116811461082d57600080fd5b60006020828403121561211357600080fd5b813561211e816120ec565b9392505050565b6000806040838503121561213857600080fd5b82359150602083013561214a816120ec565b809150509250929050565b6000806040838503121561216857600080fd5b8235612173816120ec565b9150602083013561214a816120ec565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156121ac57600080fd5b82356121b7816120ec565b9150602083013567ffffffffffffffff808211156121d457600080fd5b818501915085601f8301126121e857600080fd5b8135818111156121fa576121fa612183565b604051601f8201601f19908116603f0116810190838211818310171561222257612222612183565b8160405282815288602084870101111561223b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561226f57600080fd5b5035919050565b6000806040838503121561228957600080fd5b82356003811061217357600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156122c057600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156108975761089761235f565b600181811c9082168061239c57607f821691505b6020821081036123bc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c7c576000816000526020600020601f850160051c810160208610156123eb5750805b601f850160051c820191505b8181101561240a578281556001016123f7565b505050505050565b815167ffffffffffffffff81111561242c5761242c612183565b6124408161243a8454612388565b846123c2565b602080601f831160018114612475576000841561245d5750858301515b600019600386901b1c1916600185901b17855561240a565b600085815260208120601f198616915b828110156124a457888601518255948401946001909101908401612485565b50858210156124c25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352600084546124e681612388565b8060208701526040600180841660008114612508576001811461252457612554565b60ff19851660408a0152604084151560051b8a01019550612554565b89600052602060002060005b8581101561254b5781548b8201860152908301908801612530565b8a016040019650505b509398975050505050505050565b808201808211156108975761089761235f565b80820281158282048414176108975761089761235f565b6000826125a957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561262157600080fd5b8151801515811461211e57600080fd5b60005b8381101561264c578181015183820152602001612634565b50506000910152565b60008251612667818460208701612631565b9190910192915050565b6020815260008251806020840152612690816040850160208701612631565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220de736ff0f8745743bbe86f506cd835dc7a4bffa296d610187f4a85419885dc7964736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
