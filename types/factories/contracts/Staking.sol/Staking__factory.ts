/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/Staking.sol/Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "returnedAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "RewardTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    name: "UserClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserWithdrew",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_TIME",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getEarnedRewardTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "claimableRewardTokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockTime",
    outputs: [
      {
        internalType: "uint48",
        name: "unlockTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oahToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "newStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_convertRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storage.Period",
        name: "_period",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setStakes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "convertRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockTimePeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userAccumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userClaimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "userTotalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051612574610118600039600081816105bf0152818161060801528181610df501528181610e350152610ec401526125746000f3fe60806040526004361061019c5760003560e01c80635c975abb116100ec578063a415814d1161008a578063ec85842511610064578063ec858425146104fe578063f2fde38b1461051e578063f7c618c11461053e578063ffa21efe1461055f57600080fd5b8063a415814d14610424578063d5a44f8614610444578063e89905241461049057600080fd5b806385790d88116100c657806385790d881461039d5780638aee8127146103bd5780638da5cb5b146103dd57806393ce53431461040f57600080fd5b80635c975abb14610350578063715018a6146103735780638456cb591461038857600080fd5b80633f4ba83a11610159578063485cc95511610133578063485cc955146102f557806349c64c0d146103155780634f1ef2861461032857806352d1902d1461033b57600080fd5b80633f4ba83a14610279578063441a3e701461028e578063463c37a5146102ae57600080fd5b8063081e3eda146101a15780631ab06ee5146101c657806326949984146101e85780633659cfe614610219578063379607f5146102395780633b1ad44c14610259575b600080fd5b3480156101ad57600080fd5b50610130545b6040519081526020015b60405180910390f35b3480156101d257600080fd5b506101e66101e1366004611f1d565b61057f565b005b3480156101f457600080fd5b5061020265ffffffffffff81565b60405165ffffffffffff90911681526020016101bd565b34801561022557600080fd5b506101e6610234366004611f54565b6105b5565b34801561024557600080fd5b506101e6610254366004611f78565b61069d565b34801561026557600080fd5b50610202610274366004611f91565b6107f9565b34801561028557600080fd5b506101e6610866565b34801561029a57600080fd5b506101e66102a9366004611f1d565b610878565b3480156102ba57600080fd5b506101b36102c9366004611f91565b6000918252610131602090815260408084206001600160a01b0393909316845291905290206002015490565b34801561030157600080fd5b506101e6610310366004611fc1565b610a81565b6101e6610323366004611f1d565b610c4e565b6101e6610336366004612005565b610deb565b34801561034757600080fd5b506101b3610eb7565b34801561035c57600080fd5b5060655460ff1660405190151581526020016101bd565b34801561037f57600080fd5b506101e6610f6a565b34801561039457600080fd5b506101e6610f7c565b3480156103a957600080fd5b506101b36103b8366004611f91565b610f8c565b3480156103c957600080fd5b506101e66103d8366004611f54565b61103e565b3480156103e957600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101bd565b34801561041b57600080fd5b506101b36110e5565b34801561043057600080fd5b506101b361043f366004611f91565b611171565b34801561045057600080fd5b5061046461045f366004611f78565b6111ac565b604080516001600160a01b039095168552602085019390935291830152151560608201526080016101bd565b34801561049c57600080fd5b506104de6104ab366004611f91565b61013160209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101bd565b34801561050a57600080fd5b506101b3610519366004611f91565b6111f4565b34801561052a57600080fd5b506101e6610539366004611f54565b611276565b34801561054a57600080fd5b50610132546103f7906001600160a01b031681565b34801561056b57600080fd5b506101e661057a3660046120c9565b6112ec565b6105876114a9565b80610130838154811061059c5761059c6120eb565b9060005260206000209060040201600101819055505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106065760405162461bcd60e51b81526004016105fd90612101565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661064f6000805160206124f8833981519152546001600160a01b031690565b6001600160a01b0316146106755760405162461bcd60e51b81526004016105fd9061214d565b61067e81611503565b6040805160008082526020820190925261069a9183919061150b565b50565b6106a5611676565b610132546001600160a01b03166106fe5760405162461bcd60e51b815260206004820152601860248201527f6e6f2072657761726420746f6b656e20636f6e7472616374000000000000000060448201526064016105fd565b600081815261013160209081526040808320338085529252822091906107259084906111f4565b90506000811161076c5760405162461bcd60e51b81526020600482015260126024820152716e6f20746f6b656e7320746f20636c61696d60701b60448201526064016105fd565b6000600283015561077c426116cf565b65ffffffffffff166001830155610132546001600160a01b03166107a181338461172b565b6101325460408051868152602081018590526001600160a01b039092169133917face6f3f8956413e2875b9070e2616d13687dfb251cf63b343028c32822dfa263910160405180910390a350505061069a600160fb55565b6000828152610131602090815260408083206001600160a01b038516845290915281205461082d5765ffffffffffff61085d565b6000838152610131602090815260408083206001600160a01b038616845290915290206003015461085d906116cf565b90505b92915050565b61086e6114a9565b610876611795565b565b610880611676565b600081116108d05760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e7420746f207769746864726177206e6f74203e203000000000000060448201526064016105fd565b6108da82336107f9565b65ffffffffffff1642116109305760405162461bcd60e51b815260206004820152601e60248201527f7374616b656420746f6b656e7320617265207374696c6c206c6f636b6564000060448201526064016105fd565b60006101308381548110610946576109466120eb565b90600052602060002090600402019050600061096284336117e7565b80549091508311156109b65760405162461bcd60e51b815260206004820152601f60248201527f776974686472617720616d6f756e74203e207374616b656420616d6f756e740060448201526064016105fd565b6109bf8361184e565b6001600160a01b03168160000160008282546109db91906121af565b909155505081546001600160a01b0316610a2257604051339084156108fc029085906000818181858888f19350505050158015610a1c573d6000803e3d6000fd5b50610a3a565b81546001600160a01b0316610a3881338661172b565b505b604051838152849033907f755012e2f452d6e07692ebbac509b615989a2f49c7c41b630e386c5526e6fcf29060200160405180910390a35050610a7d600160fb55565b5050565b600054610100900460ff1615808015610aa15750600054600160ff909116105b80610abb5750303b158015610abb575060005460ff166001145b610b1e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105fd565b6000805460ff191660011790558015610b41576000805461ff0019166101001790555b610b496118a7565b610b516118d6565b610b59611905565b61013280546001600160a01b0319166001600160a01b038416179055610b7e83611276565b6040805180820190915260148152734552525f5354414b455f4e4f545f41435449564560601b602082015261012d90610bb7908261224c565b5060408051808201909152601c81527f4552525f494e56414c49445f4e45575f5354414b455f414d4f554e5400000000602082015261012e90610bfa908261224c565b50620186a061012f558015610c49576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610c56611676565b610c5e611934565b60008111610cae5760405162461bcd60e51b815260206004820152601860248201527f7374616b6520616d6f756e74206d757374206265203e2030000000000000000060448201526064016105fd565b60006101308381548110610cc457610cc46120eb565b60009182526020909120600490910201600381015490915061012d9060ff16610d005760405162461bcd60e51b81526004016105fd919061230c565b5080546001600160a01b03168015610d2c57610d276001600160a01b03821633308661197a565b610d51565b61012e348414610d4f5760405162461bcd60e51b81526004016105fd919061230c565b505b6000610d5d85336117e7565b9050610d77848260000154610d72919061239c565b61184e565b6001600160a01b031681556002830154610d9a90610d95904261239c565b6116cf565b65ffffffffffff166003820155604051848152859033907f91405db2584f6e8463494f0e18c40f87fe3146322d19c494e8a0e0a039c388699060200160405180910390a3505050610a7d600160fb55565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610e335760405162461bcd60e51b81526004016105fd90612101565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e7c6000805160206124f8833981519152546001600160a01b031690565b6001600160a01b031614610ea25760405162461bcd60e51b81526004016105fd9061214d565b610eab82611503565b610a7d8282600161150b565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f575760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105fd565b506000805160206124f883398151915290565b610f726114a9565b61087660006119b8565b610f846114a9565b610876611a0a565b6000828152610131602090815260408083206001600160a01b0385168452909152812060018101544211610fc4576000915050610860565b8060010154816003015411610fdd576000915050610860565b6000816001015442610fef91906121af565b90508160030154421161101257600182015461100b90426121af565b9050611029565b8160010154826003015461102691906121af565b90505b815461103590826123af565b95945050505050565b611046611676565b61104e6114a9565b610132546001600160a01b031660006110656110e5565b90508015611081576110816001600160a01b038316338361172b565b61013280546001600160a01b0319166001600160a01b0385811691821790925560405183815290918416907fc133375757269458a329c73a344c8ef483535870f46ed4cd332f857a5ef525d09060200160405180910390a3505061069a600160fb55565b610132546000906001600160a01b03166110ff5750600090565b610132546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c91906123c6565b905090565b6000828152610131602090815260408083206001600160a01b03851684529091528120600201546111a28484610f8c565b61085d919061239c565b61013081815481106111bd57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b600080610130848154811061120b5761120b6120eb565b600091825260209091206101325460049092020191506001600160a01b0316158061123857506001810154155b15611247576000915050610860565b806001015461012f5461125a8686611171565b61126491906123af565b61126e91906123df565b915050610860565b61127e6114a9565b6001600160a01b0381166112e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fd565b61069a816119b8565b6112f46114a9565b60008083600281111561130957611309612401565b03611318575062093a806113a6565b600183600281111561132c5761132c612401565b0361133b5750624f1a006113a6565b600283600281111561134f5761134f612401565b0361135e5750629e34006113a6565b60405162461bcd60e51b815260206004820181905260248201527f4f776e65723a2043616e6e6f742073657420746f207468697320706572696f6460448201526064016105fd565b604080516080810182526001600160a01b03938416815265560ba43ba000602082019081529181019283526001606082018181526101308054928301815560005291517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf34600490920291820180546001600160a01b031916919096161790945590517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf3584015590517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf36830155517f2f605e086faac1d93117bbfbc18835d434e9405fadc1ca66faf4b864746daf37909101805460ff191691151591909117905550565b6033546001600160a01b031633146108765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fd565b61069a6114a9565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561153e57610c4983611a47565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611598575060408051601f3d908101601f19168201909252611595918101906123c6565b60015b6115fb5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105fd565b6000805160206124f8833981519152811461166a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105fd565b50610c49838383611ae3565b600260fb54036116c85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105fd565b600260fb55565b600065ffffffffffff8211156117275760405162461bcd60e51b815260206004820152601c60248201527f76616c756520646f65736e27742066697420696e20343820626974730000000060448201526064016105fd565b5090565b6040516001600160a01b038316602482015260448101829052610c4990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b08565b600160fb55565b61179d611bdd565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000828152610131602090815260408083206001600160a01b03851684529091528120906118158484610f8c565b90508082600201600082825461182b919061239c565b9091555061183a9050426116cf565b65ffffffffffff1660018301555092915050565b60006001600160a01b038211156117275760405162461bcd60e51b815260206004820152601d60248201527f76616c756520646f65736e27742066697420696e20313630206269747300000060448201526064016105fd565b600054610100900460ff166118ce5760405162461bcd60e51b81526004016105fd90612417565b610876611c26565b600054610100900460ff166118fd5760405162461bcd60e51b81526004016105fd90612417565b610876611c56565b600054610100900460ff1661192c5760405162461bcd60e51b81526004016105fd90612417565b610876611c89565b60655460ff16156108765760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105fd565b6040516001600160a01b03808516602483015283166044820152606481018290526119b29085906323b872dd60e01b90608401611757565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a12611934565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117ca3390565b6001600160a01b0381163b611ab45760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105fd565b6000805160206124f883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611aec83611cb0565b600082511180611af95750805b15610c49576119b28383611cf0565b6000611b5d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d159092919063ffffffff16565b9050805160001480611b7e575080806020019051810190611b7e9190612462565b610c495760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105fd565b60655460ff166108765760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105fd565b600054610100900460ff16611c4d5760405162461bcd60e51b81526004016105fd90612417565b610876336119b8565b600054610100900460ff16611c7d5760405162461bcd60e51b81526004016105fd90612417565b6065805460ff19169055565b600054610100900460ff1661178e5760405162461bcd60e51b81526004016105fd90612417565b611cb981611a47565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061085d838360405180606001604052806027815260200161251860279139611d2c565b6060611d248484600085611da4565b949350505050565b6060600080856001600160a01b031685604051611d4991906124a8565b600060405180830381855af49150503d8060008114611d84576040519150601f19603f3d011682016040523d82523d6000602084013e611d89565b606091505b5091509150611d9a86838387611e7f565b9695505050505050565b606082471015611e055760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105fd565b600080866001600160a01b03168587604051611e2191906124a8565b60006040518083038185875af1925050503d8060008114611e5e576040519150601f19603f3d011682016040523d82523d6000602084013e611e63565b606091505b5091509150611e7487838387611e7f565b979650505050505050565b60608315611eee578251600003611ee7576001600160a01b0385163b611ee75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105fd565b5081611d24565b611d248383815115611f035781518083602001fd5b8060405162461bcd60e51b81526004016105fd91906124c4565b60008060408385031215611f3057600080fd5b50508035926020909101359150565b6001600160a01b038116811461069a57600080fd5b600060208284031215611f6657600080fd5b8135611f7181611f3f565b9392505050565b600060208284031215611f8a57600080fd5b5035919050565b60008060408385031215611fa457600080fd5b823591506020830135611fb681611f3f565b809150509250929050565b60008060408385031215611fd457600080fd5b8235611fdf81611f3f565b91506020830135611fb681611f3f565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561201857600080fd5b823561202381611f3f565b9150602083013567ffffffffffffffff8082111561204057600080fd5b818501915085601f83011261205457600080fd5b81358181111561206657612066611fef565b604051601f8201601f19908116603f0116810190838211818310171561208e5761208e611fef565b816040528281528860208487010111156120a757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156120dc57600080fd5b823560038110611fdf57600080fd5b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561086057610860612199565b600181811c908216806121d657607f821691505b6020821081036121f657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c49576000816000526020600020601f850160051c810160208610156122255750805b601f850160051c820191505b8181101561224457828155600101612231565b505050505050565b815167ffffffffffffffff81111561226657612266611fef565b61227a8161227484546121c2565b846121fc565b602080601f8311600181146122af57600084156122975750858301515b600019600386901b1c1916600185901b178555612244565b600085815260208120601f198616915b828110156122de578886015182559484019460019091019084016122bf565b50858210156122fc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602080835260008454612320816121c2565b8060208701526040600180841660008114612342576001811461235e5761238e565b60ff19851660408a0152604084151560051b8a0101955061238e565b89600052602060002060005b858110156123855781548b820186015290830190880161236a565b8a016040019650505b509398975050505050505050565b8082018082111561086057610860612199565b808202811582820484141761086057610860612199565b6000602082840312156123d857600080fd5b5051919050565b6000826123fc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561247457600080fd5b81518015158114611f7157600080fd5b60005b8381101561249f578181015183820152602001612487565b50506000910152565b600082516124ba818460208701612484565b9190910192915050565b60208152600082518060208401526124e3816040850160208701612484565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a247e08fa581212d40ab2cbcc5971666bbfb505c2f1c3a7f897adff56976d5b764736f6c63430008190033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
